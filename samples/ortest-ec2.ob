# OpenResty Tester Deployment Script for Amazon Linux AMI

jobs = 2;
ngx_redis_version = 0.3.6;
nginx_version = 1.2.3;
openresty_version = 1.0.15.11;
ngx_upstream_keepalive_version = 0.7;
redis_version = 2.4.14;
ngx_auth_request_version = 0.2;
pcre_version = 8.30;
force = 0;
ragel_version = 6.7;
valgrind_version = 3.7.0;
libev_version = 4.11;





t {
    dep t-ngx_array_var;
    dep t-ngx_redis2;
    dep t-ngx_lua;
    dep t-ngx_srcache;
    dep t-ngx_memc;
    dep t-ngx_set_misc;
    dep t-ngx_xss;
    dep t-ngx_drizzle;
    dep t-ngx_rds_json;
    dep t-ngx_echo;
    dep t-ngx_postgres;
    dep t-ngx_eval;
    dep t-ngx_headers_more;
    dep t-ngx_rds_csv;
    dep t-ngx_encrypted_session;
    dep t-ngx_form_input;
    dep t-ngx_coolkit;
    dep t-ngx_iconv;
    dep t-ngx_example_lua;
    dep t-lua-resty-memcached;
    dep t-lua-resty-redis;
    dep t-lua-resty-mysql;
    dep t-lua-resty-string;
    dep t-lua-resty-upload;
    dep t-lua-resty-dns;
}

to {
    dep to-ngx_array_var;
    dep to-ngx_redis2;
    dep to-ngx_lua;
    dep to-ngx_srcache;
    dep to-ngx_memc;
    dep to-ngx_set_misc;
    dep to-ngx_xss;
    dep to-ngx_drizzle;
    dep to-ngx_rds_json;
    dep to-ngx_echo;
    dep to-ngx_postgres;
    dep to-ngx_eval;
    dep to-ngx_headers_more;
    dep to-ngx_rds_csv;
    dep to-ngx_encrypted_session;
    dep to-ngx_form_input;
    dep to-ngx_coolkit;
    dep to-ngx_iconv;
    dep to-ngx_example_lua;
}

tv {
    dep tv1 tv2;
}

tv1 {

    dep tv-ngx_array_var;
    dep tv-ngx_redis2;
    dep tv-ngx_lua;
}

tv2 {

    dep tv-ngx_srcache;
    dep tv-ngx_memc;
    dep tv-ngx_set_misc;
    dep tv-ngx_xss;
    dep tv-ngx_drizzle;
    dep tv-ngx_rds_json;
    dep tv-ngx_echo;
    dep tv-ngx_postgres;
    dep tv-ngx_eval;
    dep tv-ngx_headers_more;
    dep tv-ngx_rds_csv;
    dep tv-ngx_encrypted_session;
    dep tv-ngx_form_input;
    dep tv-ngx_coolkit;
    dep tv-ngx_iconv;
    dep tv-ngx_example_lua;
}

tr {
    dep tr-ngx_redis2;
    dep tr-ngx_lua;
    dep tr-ngx_srcache;
    dep tr-ngx_memc;
    dep tr-ngx_drizzle;
    dep tr-ngx_rds_json;
    dep tr-ngx_echo;
    dep tr-ngx_postgres;
    dep tr-ngx_eval;
    dep tr-ngx_headers_more;
    dep tr-ngx_rds_csv;
    dep tr-ngx_form_input;
    dep tr-ngx_iconv;
    dep tr-lua-resty-memcached;
    dep tr-lua-resty-redis;
    dep tr-lua-resty-mysql;
    dep tr-lua-resty-string;
    dep tr-lua-resty-upload;
    dep tr-lua-resty-dns;
}

trv {
    dep trv1 trv2;
}

trv1 {

    dep trv-ngx_redis2;
    dep trv-ngx_lua;
    dep trv-lua-resty-memcached;
    dep trv-lua-resty-redis;
    dep trv-lua-resty-mysql;
    dep trv-lua-resty-string;
    dep trv-lua-resty-upload;
    dep trv-lua-resty-dns;
}

trv2 {

    dep trv-ngx_srcache;
    dep trv-ngx_memc;
    dep trv-ngx_drizzle;
    dep trv-ngx_rds_json;
    dep trv-ngx_echo;
    dep trv-ngx_postgres;
    dep trv-ngx_eval;
    dep trv-ngx_headers_more;
    dep trv-ngx_rds_csv;
    dep trv-ngx_form_input;
    dep trv-ngx_iconv;
}

tw {
    dep tw-ngx_redis2;
    dep tw-ngx_lua;
    dep tw-ngx_srcache;
    dep tw-ngx_memc;
    dep tw-ngx_drizzle;
    dep tw-ngx_rds_json;
    dep tw-ngx_echo;
    dep tw-ngx_postgres;
    dep tw-ngx_eval;
    dep tw-ngx_headers_more;
    dep tw-ngx_rds_csv;
    dep tw-ngx_form_input;
    dep tw-ngx_iconv;
    dep tw-lua-resty-memcached;
    dep tw-lua-resty-redis;
    dep tw-lua-resty-mysql;
    dep tw-lua-resty-string;
    dep tw-lua-resty-upload;
    dep tw-lua-resty-dns;
}

twv {
    dep twv1 twv2;
}

twv1 {

    dep twv-ngx_redis2;
    dep twv-ngx_lua;
    dep trv-lua-resty-memcached;
    dep trv-lua-resty-redis;
    dep trv-lua-resty-mysql;
    dep trv-lua-resty-string;
    dep trv-lua-resty-upload;
    dep trv-lua-resty-dns;
}

twv2 {

    dep twv-ngx_srcache;
    dep twv-ngx_memc;
    dep twv-ngx_drizzle;
    dep twv-ngx_rds_json;
    dep twv-ngx_echo;
    dep twv-ngx_postgres;
    dep twv-ngx_eval;
    dep twv-ngx_headers_more;
    dep twv-ngx_rds_csv;
    dep twv-ngx_form_input;
    dep twv-ngx_iconv;
}

th {
    dep th-ngx_array_var;
    dep th-ngx_redis2;
    dep th-ngx_lua;
    dep th-ngx_srcache;
    dep th-ngx_memc;
    dep th-ngx_set_misc;
    dep th-ngx_xss;
    dep th-ngx_drizzle;
    dep th-ngx_rds_json;
    dep th-ngx_echo;
    dep th-ngx_postgres;
    dep th-ngx_eval;
    dep th-ngx_headers_more;
    dep th-ngx_rds_csv;
    dep th-ngx_encrypted_session;
    dep th-ngx_form_input;
    dep th-ngx_coolkit;
    dep th-ngx_iconv;
    dep th-ngx_example_lua;
    dep th-lua-resty-memcached;
    dep th-lua-resty-redis;
    dep th-lua-resty-mysql;
    dep th-lua-resty-string;
    dep th-lua-resty-upload;
    dep th-lua-resty-dns;
}

thv {
    dep thv-ngx_array_var;
    dep thv-ngx_redis2;
    dep thv-ngx_lua;
    dep thv-ngx_srcache;
    dep thv-ngx_memc;
    dep thv-ngx_set_misc;
    dep thv-ngx_xss;
    dep thv-ngx_drizzle;
    dep thv-ngx_rds_json;
    dep thv-ngx_echo;
    dep thv-ngx_postgres;
    dep thv-ngx_eval;
    dep thv-ngx_headers_more;
    dep thv-ngx_rds_csv;
    dep thv-ngx_encrypted_session;
    dep thv-ngx_form_input;
    dep thv-ngx_coolkit;
    dep thv-ngx_iconv;
    dep thv-ngx_example_lua;
    dep thv-lua-resty-memcached;
    dep thv-lua-resty-redis;
    dep thv-lua-resty-mysql;
    dep thv-lua-resty-string;
    dep thv-lua-resty-upload;
    dep thv-lua-resty-dns;
}

tl {
    dep tl-ngx_array_var;
    dep tl-ngx_redis2;
    dep tl-ngx_lua;
    dep tl-ngx_srcache;
    dep tl-ngx_memc;
    dep tl-ngx_set_misc;
    dep tl-ngx_xss;
    dep tl-ngx_drizzle;
    dep tl-ngx_rds_json;
    dep tl-ngx_echo;
    dep tl-ngx_postgres;
    dep tl-ngx_eval;
    dep tl-ngx_headers_more;
    dep tl-ngx_rds_csv;
    dep tl-ngx_encrypted_session;
    dep tl-ngx_form_input;
    dep tl-ngx_coolkit;
    dep tl-ngx_iconv;
    dep tl-ngx_example_lua;
    dep tl-lua-resty-memcached;
    dep tl-lua-resty-redis;
    dep tl-lua-resty-mysql;
    dep tl-lua-resty-string;
    dep tl-lua-resty-upload;
    dep tl-lua-resty-dns;
}

etcproxy {
    git git://github.com/chaoslawful/etcproxy.git ~/git/etcproxy;
    dep erlang;
}

erlang {
    prog erl erlc;
    yum erlang;
}

ngx_srcache {
    git git://github.com/agentzh/srcache-nginx-module.git ~/git/srcache-nginx-module;
    dep ndk ngx_set_misc ngx_redis ngx_xss;
    dep ngx_redis2 ngx_eval ngx_echo ngx_headers_more;
    dep ngx_lua ngx_rds_json ngx_drizzle ngx_postgres;
    dep ngx_memc ngx_upstream_keepalive;
}

ngx_memc {
    git git://github.com/agentzh/memc-nginx-module.git ~/git/memc-nginx-module;
    dep ragel;
}

ragel {
    prog ragel;
    cwd /tmp;
    fetch http://www.complang.org/ragel/ragel-$ragel_version.tar.gz;
    tarball ragel-$ragel_version.tar.gz;
    sh 'cd ragel-$ragel_version && ./configure && make -j$jobs && sudo make install';
    dep cxx;
}

cxx {
    prog g++;
    yum gcc-c++;
    dep make;
}

ngx_upstream_keepalive {
    file ~/work/nginx/ngx_http_upstream_keepalive-$ngx_upstream_keepalive_version;
    cwd ~/work/nginx;
    fetch http://mdounin.ru/files/ngx_http_upstream_keepalive-$ngx_upstream_keepalive_version.tar.gz;
    tarball ngx_http_upstream_keepalive-$ngx_upstream_keepalive_version.tar.gz;
}

ngx_postgres {
    git git://github.com/FRiCKLE/ngx_postgres.git ~/git/postgres-nginx-module;
    env LIBPQ_INC /usr/include;
    env LIBPQ_LIB /usr/lib64;
    dep libpq;
}

libpq {
    file /usr/lib64/libpq.so;
    file /usr/include/libpq-fe.h;
    yum postgresql9-devel;
}

ngx_drizzle {
    env LIBDRIZZLE_INC /opt/drizzle/include/libdrizzle-1.0;
    env LIBDRIZZLE_LIB /opt/drizzle/lib;

    git git://github.com/chaoslawful/drizzle-nginx-module.git ~/git/drizzle-nginx-module;
    dep libdrizzle;
}

libdrizzle {
    file /opt/drizzle/lib/libdrizzle.so;
    file /opt/drizzle/include/libdrizzle-1.0/libdrizzle/drizzle.h;
    cwd /tmp;
    fetch http://agentzh.org/misc/nginx/drizzle7-2011.07.21.tar.gz;
    tarball drizzle7-2011.07.21.tar.gz;
    sh 'cd drizzle7-2011.07.21/ && ./configure --without-server --prefix=/opt/drizzle && make libdrizzle-1.0 && sudo make install-libdrizzle-1.0';
    dep cc;
}

ngx_rds_json {
    git git://github.com/agentzh/rds-json-nginx-module.git ~/git/rds-json-nginx-module;
}

ngx_rds_csv {
    git git://github.com/agentzh/rds-csv-nginx-module.git ~/git/rds-csv-nginx-module;
}

ngx_array_var {
    git git://github.com/agentzh/array-var-nginx-module.git ~/git/array-var-nginx-module;
    dep ndk;
}

ngx_encrypted_session {
    git git://github.com/agentzh/encrypted-session-nginx-module.git ~/git/encrypted-session-nginx-module;
    dep ndk;
}

ngx_form_input {
    git git://github.com/calio/form-input-nginx-module ~/git/form-input-nginx-module;
    dep ndk;
}

ngx_xss {
    git git://github.com/agentzh/xss-nginx-module.git ~/git/xss-nginx-module;
    dep ragel;
}

ngx_redis2 {
    git git://github.com/agentzh/redis2-nginx-module.git ~/git/redis2-nginx-module;
    dep ragel;
}

ngx_eval {
    git git://github.com/agentzh/nginx-eval-module.git ~/git/eval-nginx-module;
}

ngx_echo {
    git git://github.com/agentzh/echo-nginx-module.git ~/git/echo-nginx-module;
}

ngx_example_lua {
    git git://github.com/agentzh/nginx-example-lua-module.git ~/git/example-lua-nginx-module;

    env LD_LIBRARY_PATH /usr/local/openresty-debug/luajit/lib:$LD_LIBRARY_PATH;
    env LUAJIT_LIB /usr/local/openresty-debug/luajit/lib;
    env LUAJIT_INC /usr/local/openresty-debug/luajit/include/luajit-2.0;
    dep ngx_lua;
}

ngx_lua {
    git git://github.com/chaoslawful/lua-nginx-module.git ~/git/lua-nginx-module;

    env LD_LIBRARY_PATH /usr/local/openresty-debug/luajit/lib:$LD_LIBRARY_PATH;
    env LUAJIT_LIB /usr/local/openresty-debug/luajit/lib;
    env LUAJIT_INC /usr/local/openresty-debug/luajit/include/luajit-2.0;
    dep luajit ndk;
}

pcrejit {
    env PCRE_LIB /opt/pcrejit/lib;
    env PCRE_INC /opt/pcrejit/include;

    file /opt/pcrejit/lib/libpcre.so;
    file /opt/pcrejit/include/pcre.h;

    fetch ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-$pcre_version.tar.gz;
    tarball pcre-$pcre_version.tar.gz;
    cwd /tmp;
    sh 'cd pcre-$pcre_version && ./configure --enable-jit --enable-utf8 --prefix=/opt/pcrejit && make -j$jobs && sudo make install';
}

ngx_auth_request {
    file ~/work/nginx/ngx_http_auth_request_module-$ngx_auth_request_version;
    cwd ~/work/nginx;
    fetch http://mdounin.ru/files/ngx_http_auth_request_module-$ngx_auth_request_version.tar.gz;
    tarball ngx_http_auth_request_module-$ngx_auth_request_version.tar.gz;
}

ngx_coolkit {
    git git://github.com/FRiCKLE/ngx_coolkit.git ~/git/coolkit-nginx-module;
}

luajit {
    dep ngx_openresty-debug;
}

ngx_openresty-debug {
    test '/usr/local/openresty-debug/nginx/sbin/nginx -V 2>&1 |grep "$openresty_version$"';
    file /usr/local/openresty-debug/luajit/include/luajit-2.0/lua.h;
    file /usr/local/openresty-debug/luajit/lib/libluajit-5.1.so;
    file /usr/local/openresty-debug/nginx/sbin/nginx;
    cwd /tmp;
    fetch http://agentzh.org/misc/nginx/ngx_openresty-$openresty_version.tar.gz;
    tarball ngx_openresty-$openresty_version.tar.gz;
    sh 'cd ngx_openresty-$openresty_version && ./configure --with-cc=gcc46 --prefix=/usr/local/openresty-debug --with-luajit --with-http_drizzle_module --with-libdrizzle=/opt/drizzle --with-http_iconv_module -j$jobs --with-debug --with-luajit-xcflags="-DLUAJIT_USE_VALGRIND -I/opt/valgrind/include" && make -j$jobs && sudo make install';
    dep libdrizzle openssl pcre valgrind;
}


lua-resty-memcached {
    git git://github.com/agentzh/lua-resty-memcached.git ~/git/lua-resty-memcached;
    dep ngx_lua;
}

lua-resty-redis {
    git git://github.com/agentzh/lua-resty-redis.git ~/git/lua-resty-redis;
    dep ngx_lua;
}

lua-resty-mysql {
    git git://github.com/agentzh/lua-resty-mysql.git ~/git/lua-resty-mysql;
    dep ngx_lua;
}

lua-resty-string {
    git git://github.com/agentzh/lua-resty-string.git ~/git/lua-resty-string;
    dep ngx_lua;
}

lua-resty-upload {
    git git://github.com/agentzh/lua-resty-upload.git ~/git/lua-resty-upload;
    dep ngx_lua;
}

lua-resty-dns {
    git git://github.com/agentzh/lua-resty-dns.git ~/git/lua-resty-dns;
    dep ngx_lua;
}


ngx_headers_more {
    git git://github.com/agentzh/headers-more-nginx-module.git ~/git/headers-more-nginx-module;
}

nginx-devel-utils {
    git git://github.com/agentzh/nginx-devel-utils.git ~/git/nginx-devel-utils;
    dep no-pool-nginx;
    dep ngx_openresty;
    dep patch;
}

ngx_set_misc {
    git git://github.com/agentzh/set-misc-nginx-module ~/git/set-misc-nginx-module;
}

ngx_iconv {
    git git://github.com/calio/iconv-nginx-module ~/git/iconv-nginx-module;
    dep ndk;
}

no-pool-nginx {
    git git://github.com/shrimp/no-pool-nginx.git ~/git/no-pool-nginx;
    dep patch;
}

ngx_openresty {
    git git://github.com/agentzh/ngx_openresty.git ~/git/ngx_openresty;
}

git {
    prog git;
    yum git;
}

mockeagain {
    always;
    #file ~/git/mockeagain/mockeagain.so;
    sh 'cd ~/git/mockeagain && LD_PRELOAD= make';
    dep mockeagain-git;
    dep cc;
}

mockeagain-git {
    git git://github.com/agentzh/mockeagain.git ~/git/mockeagain;
}

run-redis {
    running 'redis-server -';
    sh '(echo "daemonize yes"; echo "loglevel warning")|redis-server -';
    dep redis;
}

redis {
    prog redis-server;
    test 'redis-server -v|grep $redis_version';
    cwd /tmp;
    fetch 'http://redis.googlecode.com/files/redis-$redis_version.tar.gz';
    tarball redis-$redis_version.tar.gz;
    sh 'cd redis-$redis_version/ && ARCH= make -j$jobs && ARCH= sudo make install';
    dep cc;
}

run-postgres {
    running 'postgres: writer process';
    sh 'sudo service postgresql start || (sleep 10 && sudo service postgresql start) || sudo service postgresql initdb';
    dep postgres;
}

postgres {
    prog pg_ctl;
    yum postgresql-server;

    # vim /var/lib/pgsql9/data/pg_hba.conf
    # psql> create user ngx_test with password 'ngx_test';
    # psql> create database ngx_test;
    # psql> grant all privileges on database ngx_test to ngx_test;
}

run-mysql {
    running 'mysqld --';
    sh 'sudo service mysqld start || (sleep 10 && sudo service mysqld start)';
    dep mysql;
}

mysql {
    prog mysqld_safe;
    yum mysql mysql-server;

    # mysql -u root
    # mysql> create database ngx_test;
    # mysql> create user 'ngx_test'@'localhost' identified by 'ngx_test';
    # mysql> grant all privileges on ngx_test.* to 'ngx_test'@'localhost' with grant option;
}

run-memcached {
    running 'memcached -d -p 11211';
    sh 'memcached -d -p 11211 -l 127.0.0.1';
    dep memcached;
}

memcached {
    prog memcached;
    yum memcached;
}

nginx-module-test {
    always;
    env PATH $PWD/work/nginx/sbin:$HOME/git/nginx-devel-utils:$PATH;
    dep prove test-nginx no-pool-nginx nginx-devel-utils axel;
    dep cc openssl pcre;
}

openssl {
    file /usr/include/openssl/md5.h;

    yum openssl-devel;
}

pcre {
    prog pcre-config;
    yum pcre-devel;
}

axel {
    prog axel;
    cwd /tmp;
    fetch 'http://alioth.debian.org/frs/download.php/3016/axel-2.4.tar.bz2';
    tarball axel-2.4.tar.bz2;
    sh 'cd axel-2.4 && ./configure && make && sudo make install';
    dep cc;
}

cc {
    prog gcc46;
    yum gcc46;
    dep make;
}

make {
    prog make;
    yum make;
}

prove {
    prog prove;
    yum perl-Test-Harness;
}

test-nginx {
    git git://github.com/agentzh/test-nginx.git ~/git/test-nginx;
    dep test-base time-hires test-longstring list-moreutils parallel-forkmanager;
    dep ab weighttp;
}

ab {
    prog ab;
    yum httpd-tools;
}

weighttp {
    prog weighttp;
    git https://github.com/lighttpd/weighttp ~/git/weighttp;
    cwd ~/git/weighttp;
    sh './waf configure && ./waf build && sudo ./waf install';
    dep libev python;
}

python {
    prog python;
    yum python;
}

libev {
    file /usr/local/lib/libev.so;
    file /usr/local/include/ev.h;
    cwd /tmp;
    fetch http://dist.schmorp.de/libev/libev-$libev_version.tar.gz;
    tarball libev-$libev_version.tar.gz;
    sh 'cd libev-$libev_version && ./configure && make -j$jobs && sudo make install';
    dep cxx cc;
}

parallel-forkmanager {
    test 'perl -MParallel::ForkManager -e1';
    cpan Parallel::ForkManager;
}

list-moreutils {
    test 'perl -MList::MoreUtils -e1';
    yum perl-List-MoreUtils;
}

test-longstring {
    test 'perl -MTest::LongString -e1';
    cpan Test::LongString;
}

time-hires {
    test 'perl -MTime::HiRes -e1';
    yum perl-Time-HiRes;
}

test-base {
    test 'perl -e "require(q{Test/Base.pm});"';
    yum perl-Test-Base;
}

patch {
    prog patch;
    yum patch;
}

ndk {
    git git://github.com/simpl/ngx_devel_kit.git ~/git/ndk-nginx-module;
}

ngx_redis {
    file ~/work/nginx/ngx_http_redis-$ngx_redis_version;
    cwd ~/work/nginx;
    fetch http://people.freebsd.org/~osa/ngx_http_redis-$ngx_redis_version.tar.gz;
    tarball ngx_http_redis-$ngx_redis_version.tar.gz;
}

cpan {
    prog cpan;
    yum perl-CPAN;
    dep cc;
}




t-ngx_srcache {
    always;
    cwd ~/git/srcache-nginx-module;
    env PATH '~/git/srcache-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP 1;

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_srcache;

    dep run-memcached run-redis run-mysql run-postgres;
}


t-ngx_set_misc {
    always;
    cwd ~/git/set-misc-nginx-module;
    env PATH '~/git/set-misc-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP 1;

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_set_misc;

    dep ndk ngx_echo ngx_iconv;
}

t-ngx_headers_more {
    always;
    cwd ~/git/headers-more-nginx-module;
    env PATH '~/git/headers-more-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP 1;

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_headers_more;

    dep ngx_eval ngx_echo ngx_lua;
}

t-ngx_rds_json {
    always;
    cwd ~/git/rds-json-nginx-module;
    env PATH '~/git/rds-json-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP 1;

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_rds_json;

    dep run-mysql run-postgres;
    dep ngx_drizzle ngx_eval ngx_echo ngx_xss ndk ngx_set_misc ngx_array_var ngx_form_input ngx_postgres;
}

t-ngx_rds_csv {
    always;
    cwd ~/git/rds-csv-nginx-module;
    env PATH '~/git/rds-csv-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP 1;

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_rds_csv;

    dep run-mysql run-postgres;
    dep ngx_eval ngx_echo ngx_xss ndk ngx_set_misc ngx_array_var;
    dep ngx_drizzle ngx_form_input ngx_postgres;
}

t-ngx_drizzle {
    always;
    cwd ~/git/drizzle-nginx-module;
    env PATH '~/git/drizzle-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP 1;

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_drizzle;

    dep run-mysql;
    dep ngx_lua ngx_echo ngx_rds_json;
    dep ngx_headers_more ndk ngx_set_misc;
}

t-ngx_example_lua {
    always;
    cwd ~/git/example-lua-nginx-module;
    env PATH '~/git/example-lua-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP 1;

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_example_lua;

    dep ngx_echo ngx_lua;
}

t-ngx_lua {
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so $LD_PRELOAD';
    always;
    cwd ~/git/lua-nginx-module;
    env PATH '~/git/lua-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP 1;

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build2.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build2.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_lua;

    dep run-memcached run-redis run-mysql mockeagain;
    dep pcrejit ndk ngx_set_misc ngx_auth_request;
    dep ngx_echo ngx_memc ngx_headers_more;
    dep ngx_drizzle ngx_upstream_keepalive ngx_srcache;
    dep ngx_rds_json ngx_coolkit;
}

t-ngx_memc {
    always;
    cwd ~/git/memc-nginx-module;
    env PATH '~/git/memc-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP 1;

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_memc;

    dep run-memcached;
    dep ndk ngx_eval ngx_echo ngx_lua ngx_upstream_keepalive;
}

t-ngx_redis2 {
    always;
    cwd ~/git/redis2-nginx-module;
    env PATH '~/git/redis2-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP 1;

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_redis2;

    dep run-redis;
    dep ndk ngx_eval ngx_echo ngx_set_misc ngx_lua ngx_upstream_keepalive;
}

t-ngx_xss {
    always;
    cwd ~/git/xss-nginx-module;
    env PATH '~/git/xss-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP 1;

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_xss;

    dep ngx_echo ndk ngx_lua;
}

t-ngx_echo {
    always;
    cwd ~/git/echo-nginx-module;
    env PATH '~/git/echo-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP 1;

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_echo;

    dep ndk ngx_set_misc ngx_eval ngx_xss;
    dep ngx_rds_json ngx_headers_more ngx_lua;
}

t-ngx_eval {
    always;
    cwd ~/git/eval-nginx-module;
    env PATH '~/git/eval-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP 1;

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_eval;

    dep run-memcached ngx_echo ngx_memc;
}

t-ngx_form_input {
    always;
    cwd ~/git/form-input-nginx-module;
    env PATH '~/git/form-input-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP 1;

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_form_input;

    dep ngx_echo ndk ngx_set_misc ngx_array_var;
}

t-ngx_array_var {
    always;
    cwd ~/git/array-var-nginx-module;
    env PATH '~/git/array-var-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP 1;

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_array_var;

    dep ngx_echo ndk ngx_set_misc;
}

t-ngx_postgres {
    always;
    cwd ~/git/postgres-nginx-module;
    env PATH '~/git/postgres-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP 1;

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_postgres;

    dep ngx-postgres-build-script;
    dep ngx_echo ngx_lua ngx_eval ngx_rds_json;
    dep ndk ngx_set_misc ngx_form_input ngx_coolkit;
    dep ngx_auth_request run-postgres;
}

t-ngx_encrypted_session {
    always;
    cwd ~/git/encrypted-session-nginx-module;
    env PATH '~/git/encrypted-session-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP 1;

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_encrypted_session;

    dep ngx_echo ndk ngx_set_misc;
}

t-ngx_iconv {
    always;
    cwd ~/git/iconv-nginx-module;
    env PATH '~/git/iconv-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP 1;

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_iconv;

    dep ngx_echo ndk ngx_set_misc ngx_lua ngx_rds_json;
}

t-ngx_coolkit {
    always;
    cwd ~/git/coolkit-nginx-module;
    env PATH '~/git/coolkit-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP 1;

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_coolkit;

    dep ngx-coolkit-build-script;
    dep ngx_echo ndk ngx_set_misc ngx_lua ngx_rds_json;
}

t-lua-resty-memcached {
    always;
    cwd ~/git/lua-resty-memcached;
    env PATH '~/git/lua-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP 1;

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;

    dep ngx_lua nginx-module-test lua-resty-memcached;

    dep build-ngx_lua;
}
t-lua-resty-redis {
    always;
    cwd ~/git/lua-resty-redis;
    env PATH '~/git/lua-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP 1;

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;

    dep ngx_lua nginx-module-test lua-resty-redis;

    dep build-ngx_lua;
}
t-lua-resty-mysql {
    always;
    cwd ~/git/lua-resty-mysql;
    env PATH '~/git/lua-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP 1;

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;

    dep ngx_lua nginx-module-test lua-resty-mysql;

    env TEST_NGINX_MYSQL_PATH /var/lib/mysql/mysql.sock;
    dep build-ngx_lua;
}
t-lua-resty-string {
    always;
    cwd ~/git/lua-resty-string;
    env PATH '~/git/lua-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP 1;

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;

    dep ngx_lua nginx-module-test lua-resty-string;

    dep build-ngx_lua;
}
t-lua-resty-upload {
    always;
    cwd ~/git/lua-resty-upload;
    env PATH '~/git/lua-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP 1;

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;

    dep ngx_lua nginx-module-test lua-resty-upload;

    dep build-ngx_lua;
}
t-lua-resty-dns {
    always;
    cwd ~/git/lua-resty-dns;
    env PATH '~/git/lua-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP 1;

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;

    dep ngx_lua nginx-module-test lua-resty-dns;

    dep build-ngx_lua;
}


tv-ngx_srcache {
    always;
    cwd ~/git/srcache-nginx-module;
    env PATH '~/git/srcache-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;


    dep nginx-module-test ngx_srcache;

    dep run-memcached run-redis run-mysql run-postgres;
}


tv-ngx_set_misc {
    always;
    cwd ~/git/set-misc-nginx-module;
    env PATH '~/git/set-misc-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;


    dep nginx-module-test ngx_set_misc;

    dep ndk ngx_echo ngx_iconv;
}

tv-ngx_headers_more {
    always;
    cwd ~/git/headers-more-nginx-module;
    env PATH '~/git/headers-more-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;


    dep nginx-module-test ngx_headers_more;

    dep ngx_eval ngx_echo ngx_lua;
}

tv-ngx_rds_json {
    always;
    cwd ~/git/rds-json-nginx-module;
    env PATH '~/git/rds-json-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;


    dep nginx-module-test ngx_rds_json;

    dep run-mysql run-postgres;
    dep ngx_drizzle ngx_eval ngx_echo ngx_xss ndk ngx_set_misc ngx_array_var ngx_form_input ngx_postgres;
}

tv-ngx_rds_csv {
    always;
    cwd ~/git/rds-csv-nginx-module;
    env PATH '~/git/rds-csv-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;


    dep nginx-module-test ngx_rds_csv;

    dep run-mysql run-postgres;
    dep ngx_eval ngx_echo ngx_xss ndk ngx_set_misc ngx_array_var;
    dep ngx_drizzle ngx_form_input ngx_postgres;
}

tv-ngx_drizzle {
    always;
    cwd ~/git/drizzle-nginx-module;
    env PATH '~/git/drizzle-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;


    dep nginx-module-test ngx_drizzle;

    dep run-mysql;
    dep ngx_lua ngx_echo ngx_rds_json;
    dep ngx_headers_more ndk ngx_set_misc;
}

tv-ngx_example_lua {
    always;
    cwd ~/git/example-lua-nginx-module;
    env PATH '~/git/example-lua-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;


    dep nginx-module-test ngx_example_lua;

    dep ngx_echo ngx_lua;
}

tv-ngx_lua {
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so $LD_PRELOAD';
    always;
    cwd ~/git/lua-nginx-module;
    env PATH '~/git/lua-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build2.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build2.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;


    dep nginx-module-test ngx_lua;

    dep run-memcached run-redis run-mysql mockeagain;
    dep pcrejit ndk ngx_set_misc ngx_auth_request;
    dep ngx_echo ngx_memc ngx_headers_more;
    dep ngx_drizzle ngx_upstream_keepalive ngx_srcache;
    dep ngx_rds_json ngx_coolkit;
}

tv-ngx_memc {
    always;
    cwd ~/git/memc-nginx-module;
    env PATH '~/git/memc-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;


    dep nginx-module-test ngx_memc;

    dep run-memcached;
    dep ndk ngx_eval ngx_echo ngx_lua ngx_upstream_keepalive;
}

tv-ngx_redis2 {
    always;
    cwd ~/git/redis2-nginx-module;
    env PATH '~/git/redis2-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;


    dep nginx-module-test ngx_redis2;

    dep run-redis;
    dep ndk ngx_eval ngx_echo ngx_set_misc ngx_lua ngx_upstream_keepalive;
}

tv-ngx_xss {
    always;
    cwd ~/git/xss-nginx-module;
    env PATH '~/git/xss-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;


    dep nginx-module-test ngx_xss;

    dep ngx_echo ndk ngx_lua;
}

tv-ngx_echo {
    always;
    cwd ~/git/echo-nginx-module;
    env PATH '~/git/echo-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;


    dep nginx-module-test ngx_echo;

    dep ndk ngx_set_misc ngx_eval ngx_xss;
    dep ngx_rds_json ngx_headers_more ngx_lua;
}

tv-ngx_eval {
    always;
    cwd ~/git/eval-nginx-module;
    env PATH '~/git/eval-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;


    dep nginx-module-test ngx_eval;

    dep run-memcached ngx_echo ngx_memc;
}

tv-ngx_form_input {
    always;
    cwd ~/git/form-input-nginx-module;
    env PATH '~/git/form-input-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;


    dep nginx-module-test ngx_form_input;

    dep ngx_echo ndk ngx_set_misc ngx_array_var;
}

tv-ngx_array_var {
    always;
    cwd ~/git/array-var-nginx-module;
    env PATH '~/git/array-var-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;


    dep nginx-module-test ngx_array_var;

    dep ngx_echo ndk ngx_set_misc;
}

tv-ngx_postgres {
    always;
    cwd ~/git/postgres-nginx-module;
    env PATH '~/git/postgres-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;


    dep nginx-module-test ngx_postgres;

    dep ngx-postgres-build-script;
    dep ngx_echo ngx_lua ngx_eval ngx_rds_json;
    dep ndk ngx_set_misc ngx_form_input ngx_coolkit;
    dep ngx_auth_request run-postgres;
}

tv-ngx_encrypted_session {
    always;
    cwd ~/git/encrypted-session-nginx-module;
    env PATH '~/git/encrypted-session-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;


    dep nginx-module-test ngx_encrypted_session;

    dep ngx_echo ndk ngx_set_misc;
}

tv-ngx_iconv {
    always;
    cwd ~/git/iconv-nginx-module;
    env PATH '~/git/iconv-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;


    dep nginx-module-test ngx_iconv;

    dep ngx_echo ndk ngx_set_misc ngx_lua ngx_rds_json;
}

tv-ngx_coolkit {
    always;
    cwd ~/git/coolkit-nginx-module;
    env PATH '~/git/coolkit-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;


    dep nginx-module-test ngx_coolkit;

    dep ngx-coolkit-build-script;
    dep ngx_echo ndk ngx_set_misc ngx_lua ngx_rds_json;
}

tv-lua-resty-memcached {
    always;
    cwd ~/git/lua-resty-memcached;
    env PATH '~/git/lua-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;

    dep ngx_lua nginx-module-test lua-resty-memcached;

    dep build-ngx_lua;
}
tv-lua-resty-redis {
    always;
    cwd ~/git/lua-resty-redis;
    env PATH '~/git/lua-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;

    dep ngx_lua nginx-module-test lua-resty-redis;

    dep build-ngx_lua;
}
tv-lua-resty-mysql {
    always;
    cwd ~/git/lua-resty-mysql;
    env PATH '~/git/lua-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;

    dep ngx_lua nginx-module-test lua-resty-mysql;

    env TEST_NGINX_MYSQL_PATH /var/lib/mysql/mysql.sock;
    dep build-ngx_lua;
}
tv-lua-resty-string {
    always;
    cwd ~/git/lua-resty-string;
    env PATH '~/git/lua-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;

    dep ngx_lua nginx-module-test lua-resty-string;

    dep build-ngx_lua;
}
tv-lua-resty-upload {
    always;
    cwd ~/git/lua-resty-upload;
    env PATH '~/git/lua-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;

    dep ngx_lua nginx-module-test lua-resty-upload;

    dep build-ngx_lua;
}
tv-lua-resty-dns {
    always;
    cwd ~/git/lua-resty-dns;
    env PATH '~/git/lua-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;

    dep ngx_lua nginx-module-test lua-resty-dns;

    dep build-ngx_lua;
}


tr-ngx_srcache {
    always;
    cwd ~/git/srcache-nginx-module;
    env PATH '~/git/srcache-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    env MOCKEAGAIN r;
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_srcache;

    dep run-memcached run-redis run-mysql run-postgres;
}


tr-ngx_set_misc {
    always;
    cwd ~/git/set-misc-nginx-module;
    env PATH '~/git/set-misc-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    env MOCKEAGAIN r;
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_set_misc;

    dep ndk ngx_echo ngx_iconv;
}

tr-ngx_headers_more {
    always;
    cwd ~/git/headers-more-nginx-module;
    env PATH '~/git/headers-more-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    env MOCKEAGAIN r;
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_headers_more;

    dep ngx_eval ngx_echo ngx_lua;
}

tr-ngx_rds_json {
    always;
    cwd ~/git/rds-json-nginx-module;
    env PATH '~/git/rds-json-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    env MOCKEAGAIN r;
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_rds_json;

    dep run-mysql run-postgres;
    dep ngx_drizzle ngx_eval ngx_echo ngx_xss ndk ngx_set_misc ngx_array_var ngx_form_input ngx_postgres;
}

tr-ngx_rds_csv {
    always;
    cwd ~/git/rds-csv-nginx-module;
    env PATH '~/git/rds-csv-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    env MOCKEAGAIN r;
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_rds_csv;

    dep run-mysql run-postgres;
    dep ngx_eval ngx_echo ngx_xss ndk ngx_set_misc ngx_array_var;
    dep ngx_drizzle ngx_form_input ngx_postgres;
}

tr-ngx_drizzle {
    always;
    cwd ~/git/drizzle-nginx-module;
    env PATH '~/git/drizzle-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    env MOCKEAGAIN r;
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_drizzle;

    dep run-mysql;
    dep ngx_lua ngx_echo ngx_rds_json;
    dep ngx_headers_more ndk ngx_set_misc;
}

tr-ngx_example_lua {
    always;
    cwd ~/git/example-lua-nginx-module;
    env PATH '~/git/example-lua-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    env MOCKEAGAIN r;
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_example_lua;

    dep ngx_echo ngx_lua;
}

tr-ngx_lua {

    always;
    cwd ~/git/lua-nginx-module;
    env PATH '~/git/lua-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    env MOCKEAGAIN r;
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build2.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build2.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_lua;

    dep run-memcached run-redis run-mysql mockeagain;
    dep pcrejit ndk ngx_set_misc ngx_auth_request;
    dep ngx_echo ngx_memc ngx_headers_more;
    dep ngx_drizzle ngx_upstream_keepalive ngx_srcache;
    dep ngx_rds_json ngx_coolkit;
}

tr-ngx_memc {
    always;
    cwd ~/git/memc-nginx-module;
    env PATH '~/git/memc-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    env MOCKEAGAIN r;
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_memc;

    dep run-memcached;
    dep ndk ngx_eval ngx_echo ngx_lua ngx_upstream_keepalive;
}

tr-ngx_redis2 {
    always;
    cwd ~/git/redis2-nginx-module;
    env PATH '~/git/redis2-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    env MOCKEAGAIN r;
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_redis2;

    dep run-redis;
    dep ndk ngx_eval ngx_echo ngx_set_misc ngx_lua ngx_upstream_keepalive;
}

tr-ngx_xss {
    always;
    cwd ~/git/xss-nginx-module;
    env PATH '~/git/xss-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    env MOCKEAGAIN r;
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_xss;

    dep ngx_echo ndk ngx_lua;
}

tr-ngx_echo {
    always;
    cwd ~/git/echo-nginx-module;
    env PATH '~/git/echo-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    env MOCKEAGAIN r;
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_echo;

    dep ndk ngx_set_misc ngx_eval ngx_xss;
    dep ngx_rds_json ngx_headers_more ngx_lua;
}

tr-ngx_eval {
    always;
    cwd ~/git/eval-nginx-module;
    env PATH '~/git/eval-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    env MOCKEAGAIN r;
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_eval;

    dep run-memcached ngx_echo ngx_memc;
}

tr-ngx_form_input {
    always;
    cwd ~/git/form-input-nginx-module;
    env PATH '~/git/form-input-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    env MOCKEAGAIN r;
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_form_input;

    dep ngx_echo ndk ngx_set_misc ngx_array_var;
}

tr-ngx_array_var {
    always;
    cwd ~/git/array-var-nginx-module;
    env PATH '~/git/array-var-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    env MOCKEAGAIN r;
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_array_var;

    dep ngx_echo ndk ngx_set_misc;
}

tr-ngx_postgres {
    always;
    cwd ~/git/postgres-nginx-module;
    env PATH '~/git/postgres-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    env MOCKEAGAIN r;
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_postgres;

    dep ngx-postgres-build-script;
    dep ngx_echo ngx_lua ngx_eval ngx_rds_json;
    dep ndk ngx_set_misc ngx_form_input ngx_coolkit;
    dep ngx_auth_request run-postgres;
}

tr-ngx_encrypted_session {
    always;
    cwd ~/git/encrypted-session-nginx-module;
    env PATH '~/git/encrypted-session-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    env MOCKEAGAIN r;
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_encrypted_session;

    dep ngx_echo ndk ngx_set_misc;
}

tr-ngx_iconv {
    always;
    cwd ~/git/iconv-nginx-module;
    env PATH '~/git/iconv-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    env MOCKEAGAIN r;
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_iconv;

    dep ngx_echo ndk ngx_set_misc ngx_lua ngx_rds_json;
}

tr-ngx_coolkit {
    always;
    cwd ~/git/coolkit-nginx-module;
    env PATH '~/git/coolkit-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    env MOCKEAGAIN r;
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_coolkit;

    dep ngx-coolkit-build-script;
    dep ngx_echo ndk ngx_set_misc ngx_lua ngx_rds_json;
}

tr-lua-resty-memcached {
    always;
    cwd ~/git/lua-resty-memcached;
    env PATH '~/git/lua-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    env MOCKEAGAIN r;
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;

    dep ngx_lua nginx-module-test lua-resty-memcached;

    dep build-ngx_lua;
}
tr-lua-resty-redis {
    always;
    cwd ~/git/lua-resty-redis;
    env PATH '~/git/lua-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    env MOCKEAGAIN r;
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;

    dep ngx_lua nginx-module-test lua-resty-redis;

    dep build-ngx_lua;
}
tr-lua-resty-mysql {
    always;
    cwd ~/git/lua-resty-mysql;
    env PATH '~/git/lua-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    env MOCKEAGAIN r;
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;

    dep ngx_lua nginx-module-test lua-resty-mysql;

    env TEST_NGINX_MYSQL_PATH /var/lib/mysql/mysql.sock;
    dep build-ngx_lua;
}
tr-lua-resty-string {
    always;
    cwd ~/git/lua-resty-string;
    env PATH '~/git/lua-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    env MOCKEAGAIN r;
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;

    dep ngx_lua nginx-module-test lua-resty-string;

    dep build-ngx_lua;
}
tr-lua-resty-upload {
    always;
    cwd ~/git/lua-resty-upload;
    env PATH '~/git/lua-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    env MOCKEAGAIN r;
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;

    dep ngx_lua nginx-module-test lua-resty-upload;

    dep build-ngx_lua;
}
tr-lua-resty-dns {
    always;
    cwd ~/git/lua-resty-dns;
    env PATH '~/git/lua-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    env MOCKEAGAIN r;
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;

    dep ngx_lua nginx-module-test lua-resty-dns;

    dep build-ngx_lua;
}


trv-ngx_srcache {
    always;
    cwd ~/git/srcache-nginx-module;
    env PATH '~/git/srcache-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    env MOCKEAGAIN r;
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;


    dep nginx-module-test ngx_srcache;

    dep run-memcached run-redis run-mysql run-postgres;
}


trv-ngx_set_misc {
    always;
    cwd ~/git/set-misc-nginx-module;
    env PATH '~/git/set-misc-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    env MOCKEAGAIN r;
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;


    dep nginx-module-test ngx_set_misc;

    dep ndk ngx_echo ngx_iconv;
}

trv-ngx_headers_more {
    always;
    cwd ~/git/headers-more-nginx-module;
    env PATH '~/git/headers-more-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    env MOCKEAGAIN r;
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;


    dep nginx-module-test ngx_headers_more;

    dep ngx_eval ngx_echo ngx_lua;
}

trv-ngx_rds_json {
    always;
    cwd ~/git/rds-json-nginx-module;
    env PATH '~/git/rds-json-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    env MOCKEAGAIN r;
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;


    dep nginx-module-test ngx_rds_json;

    dep run-mysql run-postgres;
    dep ngx_drizzle ngx_eval ngx_echo ngx_xss ndk ngx_set_misc ngx_array_var ngx_form_input ngx_postgres;
}

trv-ngx_rds_csv {
    always;
    cwd ~/git/rds-csv-nginx-module;
    env PATH '~/git/rds-csv-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    env MOCKEAGAIN r;
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;


    dep nginx-module-test ngx_rds_csv;

    dep run-mysql run-postgres;
    dep ngx_eval ngx_echo ngx_xss ndk ngx_set_misc ngx_array_var;
    dep ngx_drizzle ngx_form_input ngx_postgres;
}

trv-ngx_drizzle {
    always;
    cwd ~/git/drizzle-nginx-module;
    env PATH '~/git/drizzle-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    env MOCKEAGAIN r;
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;


    dep nginx-module-test ngx_drizzle;

    dep run-mysql;
    dep ngx_lua ngx_echo ngx_rds_json;
    dep ngx_headers_more ndk ngx_set_misc;
}

trv-ngx_example_lua {
    always;
    cwd ~/git/example-lua-nginx-module;
    env PATH '~/git/example-lua-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    env MOCKEAGAIN r;
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;


    dep nginx-module-test ngx_example_lua;

    dep ngx_echo ngx_lua;
}

trv-ngx_lua {

    always;
    cwd ~/git/lua-nginx-module;
    env PATH '~/git/lua-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    env MOCKEAGAIN r;
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build2.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build2.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;


    dep nginx-module-test ngx_lua;

    dep run-memcached run-redis run-mysql mockeagain;
    dep pcrejit ndk ngx_set_misc ngx_auth_request;
    dep ngx_echo ngx_memc ngx_headers_more;
    dep ngx_drizzle ngx_upstream_keepalive ngx_srcache;
    dep ngx_rds_json ngx_coolkit;
}

trv-ngx_memc {
    always;
    cwd ~/git/memc-nginx-module;
    env PATH '~/git/memc-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    env MOCKEAGAIN r;
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;


    dep nginx-module-test ngx_memc;

    dep run-memcached;
    dep ndk ngx_eval ngx_echo ngx_lua ngx_upstream_keepalive;
}

trv-ngx_redis2 {
    always;
    cwd ~/git/redis2-nginx-module;
    env PATH '~/git/redis2-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    env MOCKEAGAIN r;
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;


    dep nginx-module-test ngx_redis2;

    dep run-redis;
    dep ndk ngx_eval ngx_echo ngx_set_misc ngx_lua ngx_upstream_keepalive;
}

trv-ngx_xss {
    always;
    cwd ~/git/xss-nginx-module;
    env PATH '~/git/xss-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    env MOCKEAGAIN r;
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;


    dep nginx-module-test ngx_xss;

    dep ngx_echo ndk ngx_lua;
}

trv-ngx_echo {
    always;
    cwd ~/git/echo-nginx-module;
    env PATH '~/git/echo-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    env MOCKEAGAIN r;
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;


    dep nginx-module-test ngx_echo;

    dep ndk ngx_set_misc ngx_eval ngx_xss;
    dep ngx_rds_json ngx_headers_more ngx_lua;
}

trv-ngx_eval {
    always;
    cwd ~/git/eval-nginx-module;
    env PATH '~/git/eval-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    env MOCKEAGAIN r;
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;


    dep nginx-module-test ngx_eval;

    dep run-memcached ngx_echo ngx_memc;
}

trv-ngx_form_input {
    always;
    cwd ~/git/form-input-nginx-module;
    env PATH '~/git/form-input-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    env MOCKEAGAIN r;
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;


    dep nginx-module-test ngx_form_input;

    dep ngx_echo ndk ngx_set_misc ngx_array_var;
}

trv-ngx_array_var {
    always;
    cwd ~/git/array-var-nginx-module;
    env PATH '~/git/array-var-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    env MOCKEAGAIN r;
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;


    dep nginx-module-test ngx_array_var;

    dep ngx_echo ndk ngx_set_misc;
}

trv-ngx_postgres {
    always;
    cwd ~/git/postgres-nginx-module;
    env PATH '~/git/postgres-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    env MOCKEAGAIN r;
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;


    dep nginx-module-test ngx_postgres;

    dep ngx-postgres-build-script;
    dep ngx_echo ngx_lua ngx_eval ngx_rds_json;
    dep ndk ngx_set_misc ngx_form_input ngx_coolkit;
    dep ngx_auth_request run-postgres;
}

trv-ngx_encrypted_session {
    always;
    cwd ~/git/encrypted-session-nginx-module;
    env PATH '~/git/encrypted-session-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    env MOCKEAGAIN r;
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;


    dep nginx-module-test ngx_encrypted_session;

    dep ngx_echo ndk ngx_set_misc;
}

trv-ngx_iconv {
    always;
    cwd ~/git/iconv-nginx-module;
    env PATH '~/git/iconv-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    env MOCKEAGAIN r;
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;


    dep nginx-module-test ngx_iconv;

    dep ngx_echo ndk ngx_set_misc ngx_lua ngx_rds_json;
}

trv-ngx_coolkit {
    always;
    cwd ~/git/coolkit-nginx-module;
    env PATH '~/git/coolkit-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    env MOCKEAGAIN r;
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;


    dep nginx-module-test ngx_coolkit;

    dep ngx-coolkit-build-script;
    dep ngx_echo ndk ngx_set_misc ngx_lua ngx_rds_json;
}

trv-lua-resty-memcached {
    always;
    cwd ~/git/lua-resty-memcached;
    env PATH '~/git/lua-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    env MOCKEAGAIN r;
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;

    dep ngx_lua nginx-module-test lua-resty-memcached;

    dep build-ngx_lua;
}
trv-lua-resty-redis {
    always;
    cwd ~/git/lua-resty-redis;
    env PATH '~/git/lua-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    env MOCKEAGAIN r;
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;

    dep ngx_lua nginx-module-test lua-resty-redis;

    dep build-ngx_lua;
}
trv-lua-resty-mysql {
    always;
    cwd ~/git/lua-resty-mysql;
    env PATH '~/git/lua-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    env MOCKEAGAIN r;
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;

    dep ngx_lua nginx-module-test lua-resty-mysql;

    env TEST_NGINX_MYSQL_PATH /var/lib/mysql/mysql.sock;
    dep build-ngx_lua;
}
trv-lua-resty-string {
    always;
    cwd ~/git/lua-resty-string;
    env PATH '~/git/lua-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    env MOCKEAGAIN r;
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;

    dep ngx_lua nginx-module-test lua-resty-string;

    dep build-ngx_lua;
}
trv-lua-resty-upload {
    always;
    cwd ~/git/lua-resty-upload;
    env PATH '~/git/lua-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    env MOCKEAGAIN r;
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;

    dep ngx_lua nginx-module-test lua-resty-upload;

    dep build-ngx_lua;
}
trv-lua-resty-dns {
    always;
    cwd ~/git/lua-resty-dns;
    env PATH '~/git/lua-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    env MOCKEAGAIN r;
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;

    dep ngx_lua nginx-module-test lua-resty-dns;

    dep build-ngx_lua;
}


tw-ngx_srcache {
    always;
    cwd ~/git/srcache-nginx-module;
    env PATH '~/git/srcache-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    env TEST_NGINX_POSTPONE_OUTPUT 1;
    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env MOCKEAGAIN w;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_srcache;

    dep run-memcached run-redis run-mysql run-postgres;
}


tw-ngx_set_misc {
    always;
    cwd ~/git/set-misc-nginx-module;
    env PATH '~/git/set-misc-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    env TEST_NGINX_POSTPONE_OUTPUT 1;
    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env MOCKEAGAIN w;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_set_misc;

    dep ndk ngx_echo ngx_iconv;
}

tw-ngx_headers_more {
    always;
    cwd ~/git/headers-more-nginx-module;
    env PATH '~/git/headers-more-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    env TEST_NGINX_POSTPONE_OUTPUT 1;
    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env MOCKEAGAIN w;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_headers_more;

    dep ngx_eval ngx_echo ngx_lua;
}

tw-ngx_rds_json {
    always;
    cwd ~/git/rds-json-nginx-module;
    env PATH '~/git/rds-json-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    env TEST_NGINX_POSTPONE_OUTPUT 1;
    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env MOCKEAGAIN w;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_rds_json;

    dep run-mysql run-postgres;
    dep ngx_drizzle ngx_eval ngx_echo ngx_xss ndk ngx_set_misc ngx_array_var ngx_form_input ngx_postgres;
}

tw-ngx_rds_csv {
    always;
    cwd ~/git/rds-csv-nginx-module;
    env PATH '~/git/rds-csv-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    env TEST_NGINX_POSTPONE_OUTPUT 1;
    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env MOCKEAGAIN w;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_rds_csv;

    dep run-mysql run-postgres;
    dep ngx_eval ngx_echo ngx_xss ndk ngx_set_misc ngx_array_var;
    dep ngx_drizzle ngx_form_input ngx_postgres;
}

tw-ngx_drizzle {
    always;
    cwd ~/git/drizzle-nginx-module;
    env PATH '~/git/drizzle-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    env TEST_NGINX_POSTPONE_OUTPUT 1;
    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env MOCKEAGAIN w;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_drizzle;

    dep run-mysql;
    dep ngx_lua ngx_echo ngx_rds_json;
    dep ngx_headers_more ndk ngx_set_misc;
}

tw-ngx_example_lua {
    always;
    cwd ~/git/example-lua-nginx-module;
    env PATH '~/git/example-lua-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    env TEST_NGINX_POSTPONE_OUTPUT 1;
    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env MOCKEAGAIN w;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_example_lua;

    dep ngx_echo ngx_lua;
}

tw-ngx_lua {

    always;
    cwd ~/git/lua-nginx-module;
    env PATH '~/git/lua-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    env TEST_NGINX_POSTPONE_OUTPUT 1;
    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env MOCKEAGAIN w;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build2.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build2.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_lua;

    dep run-memcached run-redis run-mysql mockeagain;
    dep pcrejit ndk ngx_set_misc ngx_auth_request;
    dep ngx_echo ngx_memc ngx_headers_more;
    dep ngx_drizzle ngx_upstream_keepalive ngx_srcache;
    dep ngx_rds_json ngx_coolkit;
}

tw-ngx_memc {
    always;
    cwd ~/git/memc-nginx-module;
    env PATH '~/git/memc-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    env TEST_NGINX_POSTPONE_OUTPUT 1;
    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env MOCKEAGAIN w;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_memc;

    dep run-memcached;
    dep ndk ngx_eval ngx_echo ngx_lua ngx_upstream_keepalive;
}

tw-ngx_redis2 {
    always;
    cwd ~/git/redis2-nginx-module;
    env PATH '~/git/redis2-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    env TEST_NGINX_POSTPONE_OUTPUT 1;
    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env MOCKEAGAIN w;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_redis2;

    dep run-redis;
    dep ndk ngx_eval ngx_echo ngx_set_misc ngx_lua ngx_upstream_keepalive;
}

tw-ngx_xss {
    always;
    cwd ~/git/xss-nginx-module;
    env PATH '~/git/xss-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    env TEST_NGINX_POSTPONE_OUTPUT 1;
    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env MOCKEAGAIN w;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_xss;

    dep ngx_echo ndk ngx_lua;
}

tw-ngx_echo {
    always;
    cwd ~/git/echo-nginx-module;
    env PATH '~/git/echo-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    env TEST_NGINX_POSTPONE_OUTPUT 1;
    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env MOCKEAGAIN w;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_echo;

    dep ndk ngx_set_misc ngx_eval ngx_xss;
    dep ngx_rds_json ngx_headers_more ngx_lua;
}

tw-ngx_eval {
    always;
    cwd ~/git/eval-nginx-module;
    env PATH '~/git/eval-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    env TEST_NGINX_POSTPONE_OUTPUT 1;
    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env MOCKEAGAIN w;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_eval;

    dep run-memcached ngx_echo ngx_memc;
}

tw-ngx_form_input {
    always;
    cwd ~/git/form-input-nginx-module;
    env PATH '~/git/form-input-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    env TEST_NGINX_POSTPONE_OUTPUT 1;
    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env MOCKEAGAIN w;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_form_input;

    dep ngx_echo ndk ngx_set_misc ngx_array_var;
}

tw-ngx_array_var {
    always;
    cwd ~/git/array-var-nginx-module;
    env PATH '~/git/array-var-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    env TEST_NGINX_POSTPONE_OUTPUT 1;
    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env MOCKEAGAIN w;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_array_var;

    dep ngx_echo ndk ngx_set_misc;
}

tw-ngx_postgres {
    always;
    cwd ~/git/postgres-nginx-module;
    env PATH '~/git/postgres-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    env TEST_NGINX_POSTPONE_OUTPUT 1;
    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env MOCKEAGAIN w;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_postgres;

    dep ngx-postgres-build-script;
    dep ngx_echo ngx_lua ngx_eval ngx_rds_json;
    dep ndk ngx_set_misc ngx_form_input ngx_coolkit;
    dep ngx_auth_request run-postgres;
}

tw-ngx_encrypted_session {
    always;
    cwd ~/git/encrypted-session-nginx-module;
    env PATH '~/git/encrypted-session-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    env TEST_NGINX_POSTPONE_OUTPUT 1;
    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env MOCKEAGAIN w;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_encrypted_session;

    dep ngx_echo ndk ngx_set_misc;
}

tw-ngx_iconv {
    always;
    cwd ~/git/iconv-nginx-module;
    env PATH '~/git/iconv-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    env TEST_NGINX_POSTPONE_OUTPUT 1;
    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env MOCKEAGAIN w;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_iconv;

    dep ngx_echo ndk ngx_set_misc ngx_lua ngx_rds_json;
}

tw-ngx_coolkit {
    always;
    cwd ~/git/coolkit-nginx-module;
    env PATH '~/git/coolkit-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    env TEST_NGINX_POSTPONE_OUTPUT 1;
    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env MOCKEAGAIN w;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_coolkit;

    dep ngx-coolkit-build-script;
    dep ngx_echo ndk ngx_set_misc ngx_lua ngx_rds_json;
}

tw-lua-resty-memcached {
    always;
    cwd ~/git/lua-resty-memcached;
    env PATH '~/git/lua-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    env TEST_NGINX_POSTPONE_OUTPUT 1;
    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env MOCKEAGAIN w;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;

    dep ngx_lua nginx-module-test lua-resty-memcached;

    dep build-ngx_lua;
}
tw-lua-resty-redis {
    always;
    cwd ~/git/lua-resty-redis;
    env PATH '~/git/lua-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    env TEST_NGINX_POSTPONE_OUTPUT 1;
    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env MOCKEAGAIN w;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;

    dep ngx_lua nginx-module-test lua-resty-redis;

    dep build-ngx_lua;
}
tw-lua-resty-mysql {
    always;
    cwd ~/git/lua-resty-mysql;
    env PATH '~/git/lua-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    env TEST_NGINX_POSTPONE_OUTPUT 1;
    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env MOCKEAGAIN w;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;

    dep ngx_lua nginx-module-test lua-resty-mysql;

    env TEST_NGINX_MYSQL_PATH /var/lib/mysql/mysql.sock;
    dep build-ngx_lua;
}
tw-lua-resty-string {
    always;
    cwd ~/git/lua-resty-string;
    env PATH '~/git/lua-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    env TEST_NGINX_POSTPONE_OUTPUT 1;
    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env MOCKEAGAIN w;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;

    dep ngx_lua nginx-module-test lua-resty-string;

    dep build-ngx_lua;
}
tw-lua-resty-upload {
    always;
    cwd ~/git/lua-resty-upload;
    env PATH '~/git/lua-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    env TEST_NGINX_POSTPONE_OUTPUT 1;
    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env MOCKEAGAIN w;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;

    dep ngx_lua nginx-module-test lua-resty-upload;

    dep build-ngx_lua;
}
tw-lua-resty-dns {
    always;
    cwd ~/git/lua-resty-dns;
    env PATH '~/git/lua-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    env TEST_NGINX_POSTPONE_OUTPUT 1;
    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env MOCKEAGAIN w;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;

    dep ngx_lua nginx-module-test lua-resty-dns;

    dep build-ngx_lua;
}


twv-ngx_srcache {
    always;
    cwd ~/git/srcache-nginx-module;
    env PATH '~/git/srcache-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    env TEST_NGINX_POSTPONE_OUTPUT 1;
    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env MOCKEAGAIN w;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;


    dep nginx-module-test ngx_srcache;

    dep run-memcached run-redis run-mysql run-postgres;
}


twv-ngx_set_misc {
    always;
    cwd ~/git/set-misc-nginx-module;
    env PATH '~/git/set-misc-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    env TEST_NGINX_POSTPONE_OUTPUT 1;
    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env MOCKEAGAIN w;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;


    dep nginx-module-test ngx_set_misc;

    dep ndk ngx_echo ngx_iconv;
}

twv-ngx_headers_more {
    always;
    cwd ~/git/headers-more-nginx-module;
    env PATH '~/git/headers-more-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    env TEST_NGINX_POSTPONE_OUTPUT 1;
    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env MOCKEAGAIN w;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;


    dep nginx-module-test ngx_headers_more;

    dep ngx_eval ngx_echo ngx_lua;
}

twv-ngx_rds_json {
    always;
    cwd ~/git/rds-json-nginx-module;
    env PATH '~/git/rds-json-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    env TEST_NGINX_POSTPONE_OUTPUT 1;
    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env MOCKEAGAIN w;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;


    dep nginx-module-test ngx_rds_json;

    dep run-mysql run-postgres;
    dep ngx_drizzle ngx_eval ngx_echo ngx_xss ndk ngx_set_misc ngx_array_var ngx_form_input ngx_postgres;
}

twv-ngx_rds_csv {
    always;
    cwd ~/git/rds-csv-nginx-module;
    env PATH '~/git/rds-csv-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    env TEST_NGINX_POSTPONE_OUTPUT 1;
    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env MOCKEAGAIN w;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;


    dep nginx-module-test ngx_rds_csv;

    dep run-mysql run-postgres;
    dep ngx_eval ngx_echo ngx_xss ndk ngx_set_misc ngx_array_var;
    dep ngx_drizzle ngx_form_input ngx_postgres;
}

twv-ngx_drizzle {
    always;
    cwd ~/git/drizzle-nginx-module;
    env PATH '~/git/drizzle-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    env TEST_NGINX_POSTPONE_OUTPUT 1;
    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env MOCKEAGAIN w;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;


    dep nginx-module-test ngx_drizzle;

    dep run-mysql;
    dep ngx_lua ngx_echo ngx_rds_json;
    dep ngx_headers_more ndk ngx_set_misc;
}

twv-ngx_example_lua {
    always;
    cwd ~/git/example-lua-nginx-module;
    env PATH '~/git/example-lua-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    env TEST_NGINX_POSTPONE_OUTPUT 1;
    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env MOCKEAGAIN w;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;


    dep nginx-module-test ngx_example_lua;

    dep ngx_echo ngx_lua;
}

twv-ngx_lua {

    always;
    cwd ~/git/lua-nginx-module;
    env PATH '~/git/lua-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    env TEST_NGINX_POSTPONE_OUTPUT 1;
    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env MOCKEAGAIN w;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build2.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build2.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;


    dep nginx-module-test ngx_lua;

    dep run-memcached run-redis run-mysql mockeagain;
    dep pcrejit ndk ngx_set_misc ngx_auth_request;
    dep ngx_echo ngx_memc ngx_headers_more;
    dep ngx_drizzle ngx_upstream_keepalive ngx_srcache;
    dep ngx_rds_json ngx_coolkit;
}

twv-ngx_memc {
    always;
    cwd ~/git/memc-nginx-module;
    env PATH '~/git/memc-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    env TEST_NGINX_POSTPONE_OUTPUT 1;
    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env MOCKEAGAIN w;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;


    dep nginx-module-test ngx_memc;

    dep run-memcached;
    dep ndk ngx_eval ngx_echo ngx_lua ngx_upstream_keepalive;
}

twv-ngx_redis2 {
    always;
    cwd ~/git/redis2-nginx-module;
    env PATH '~/git/redis2-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    env TEST_NGINX_POSTPONE_OUTPUT 1;
    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env MOCKEAGAIN w;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;


    dep nginx-module-test ngx_redis2;

    dep run-redis;
    dep ndk ngx_eval ngx_echo ngx_set_misc ngx_lua ngx_upstream_keepalive;
}

twv-ngx_xss {
    always;
    cwd ~/git/xss-nginx-module;
    env PATH '~/git/xss-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    env TEST_NGINX_POSTPONE_OUTPUT 1;
    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env MOCKEAGAIN w;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;


    dep nginx-module-test ngx_xss;

    dep ngx_echo ndk ngx_lua;
}

twv-ngx_echo {
    always;
    cwd ~/git/echo-nginx-module;
    env PATH '~/git/echo-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    env TEST_NGINX_POSTPONE_OUTPUT 1;
    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env MOCKEAGAIN w;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;


    dep nginx-module-test ngx_echo;

    dep ndk ngx_set_misc ngx_eval ngx_xss;
    dep ngx_rds_json ngx_headers_more ngx_lua;
}

twv-ngx_eval {
    always;
    cwd ~/git/eval-nginx-module;
    env PATH '~/git/eval-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    env TEST_NGINX_POSTPONE_OUTPUT 1;
    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env MOCKEAGAIN w;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;


    dep nginx-module-test ngx_eval;

    dep run-memcached ngx_echo ngx_memc;
}

twv-ngx_form_input {
    always;
    cwd ~/git/form-input-nginx-module;
    env PATH '~/git/form-input-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    env TEST_NGINX_POSTPONE_OUTPUT 1;
    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env MOCKEAGAIN w;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;


    dep nginx-module-test ngx_form_input;

    dep ngx_echo ndk ngx_set_misc ngx_array_var;
}

twv-ngx_array_var {
    always;
    cwd ~/git/array-var-nginx-module;
    env PATH '~/git/array-var-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    env TEST_NGINX_POSTPONE_OUTPUT 1;
    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env MOCKEAGAIN w;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;


    dep nginx-module-test ngx_array_var;

    dep ngx_echo ndk ngx_set_misc;
}

twv-ngx_postgres {
    always;
    cwd ~/git/postgres-nginx-module;
    env PATH '~/git/postgres-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    env TEST_NGINX_POSTPONE_OUTPUT 1;
    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env MOCKEAGAIN w;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;


    dep nginx-module-test ngx_postgres;

    dep ngx-postgres-build-script;
    dep ngx_echo ngx_lua ngx_eval ngx_rds_json;
    dep ndk ngx_set_misc ngx_form_input ngx_coolkit;
    dep ngx_auth_request run-postgres;
}

twv-ngx_encrypted_session {
    always;
    cwd ~/git/encrypted-session-nginx-module;
    env PATH '~/git/encrypted-session-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    env TEST_NGINX_POSTPONE_OUTPUT 1;
    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env MOCKEAGAIN w;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;


    dep nginx-module-test ngx_encrypted_session;

    dep ngx_echo ndk ngx_set_misc;
}

twv-ngx_iconv {
    always;
    cwd ~/git/iconv-nginx-module;
    env PATH '~/git/iconv-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    env TEST_NGINX_POSTPONE_OUTPUT 1;
    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env MOCKEAGAIN w;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;


    dep nginx-module-test ngx_iconv;

    dep ngx_echo ndk ngx_set_misc ngx_lua ngx_rds_json;
}

twv-ngx_coolkit {
    always;
    cwd ~/git/coolkit-nginx-module;
    env PATH '~/git/coolkit-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    env TEST_NGINX_POSTPONE_OUTPUT 1;
    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env MOCKEAGAIN w;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;


    dep nginx-module-test ngx_coolkit;

    dep ngx-coolkit-build-script;
    dep ngx_echo ndk ngx_set_misc ngx_lua ngx_rds_json;
}

twv-lua-resty-memcached {
    always;
    cwd ~/git/lua-resty-memcached;
    env PATH '~/git/lua-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    env TEST_NGINX_POSTPONE_OUTPUT 1;
    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env MOCKEAGAIN w;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;

    dep ngx_lua nginx-module-test lua-resty-memcached;

    dep build-ngx_lua;
}
twv-lua-resty-redis {
    always;
    cwd ~/git/lua-resty-redis;
    env PATH '~/git/lua-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    env TEST_NGINX_POSTPONE_OUTPUT 1;
    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env MOCKEAGAIN w;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;

    dep ngx_lua nginx-module-test lua-resty-redis;

    dep build-ngx_lua;
}
twv-lua-resty-mysql {
    always;
    cwd ~/git/lua-resty-mysql;
    env PATH '~/git/lua-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    env TEST_NGINX_POSTPONE_OUTPUT 1;
    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env MOCKEAGAIN w;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;

    dep ngx_lua nginx-module-test lua-resty-mysql;

    env TEST_NGINX_MYSQL_PATH /var/lib/mysql/mysql.sock;
    dep build-ngx_lua;
}
twv-lua-resty-string {
    always;
    cwd ~/git/lua-resty-string;
    env PATH '~/git/lua-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    env TEST_NGINX_POSTPONE_OUTPUT 1;
    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env MOCKEAGAIN w;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;

    dep ngx_lua nginx-module-test lua-resty-string;

    dep build-ngx_lua;
}
twv-lua-resty-upload {
    always;
    cwd ~/git/lua-resty-upload;
    env PATH '~/git/lua-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    env TEST_NGINX_POSTPONE_OUTPUT 1;
    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env MOCKEAGAIN w;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;

    dep ngx_lua nginx-module-test lua-resty-upload;

    dep build-ngx_lua;
}
twv-lua-resty-dns {
    always;
    cwd ~/git/lua-resty-dns;
    env PATH '~/git/lua-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    env TEST_NGINX_POSTPONE_OUTPUT 1;
    env TEST_NGINX_EVENT_TYPE poll;
    #env MOCKEAGAIN_VERBOSE 1;
    env MOCKEAGAIN w;
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so';
    dep mockeagain;

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;

    dep ngx_lua nginx-module-test lua-resty-dns;

    dep build-ngx_lua;
}


th-ngx_srcache {
    always;
    cwd ~/git/srcache-nginx-module;
    env PATH '~/git/srcache-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';
    env TEST_NGINX_USE_HUP 1;

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_srcache;

    dep run-memcached run-redis run-mysql run-postgres;
}


th-ngx_set_misc {
    always;
    cwd ~/git/set-misc-nginx-module;
    env PATH '~/git/set-misc-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';
    env TEST_NGINX_USE_HUP 1;

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_set_misc;

    dep ndk ngx_echo ngx_iconv;
}

th-ngx_headers_more {
    always;
    cwd ~/git/headers-more-nginx-module;
    env PATH '~/git/headers-more-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';
    env TEST_NGINX_USE_HUP 1;

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_headers_more;

    dep ngx_eval ngx_echo ngx_lua;
}

th-ngx_rds_json {
    always;
    cwd ~/git/rds-json-nginx-module;
    env PATH '~/git/rds-json-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';
    env TEST_NGINX_USE_HUP 1;

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_rds_json;

    dep run-mysql run-postgres;
    dep ngx_drizzle ngx_eval ngx_echo ngx_xss ndk ngx_set_misc ngx_array_var ngx_form_input ngx_postgres;
}

th-ngx_rds_csv {
    always;
    cwd ~/git/rds-csv-nginx-module;
    env PATH '~/git/rds-csv-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';
    env TEST_NGINX_USE_HUP 1;

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_rds_csv;

    dep run-mysql run-postgres;
    dep ngx_eval ngx_echo ngx_xss ndk ngx_set_misc ngx_array_var;
    dep ngx_drizzle ngx_form_input ngx_postgres;
}

th-ngx_drizzle {
    always;
    cwd ~/git/drizzle-nginx-module;
    env PATH '~/git/drizzle-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';
    env TEST_NGINX_USE_HUP 1;

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_drizzle;

    dep run-mysql;
    dep ngx_lua ngx_echo ngx_rds_json;
    dep ngx_headers_more ndk ngx_set_misc;
}

th-ngx_example_lua {
    always;
    cwd ~/git/example-lua-nginx-module;
    env PATH '~/git/example-lua-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';
    env TEST_NGINX_USE_HUP 1;

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_example_lua;

    dep ngx_echo ngx_lua;
}

th-ngx_lua {
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so $LD_PRELOAD';
    always;
    cwd ~/git/lua-nginx-module;
    env PATH '~/git/lua-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env TEST_NGINX_CHECK_LEAK '';
    env TEST_NGINX_USE_HUP 1;

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build2.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build2.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_lua;

    dep run-memcached run-redis run-mysql mockeagain;
    dep pcrejit ndk ngx_set_misc ngx_auth_request;
    dep ngx_echo ngx_memc ngx_headers_more;
    dep ngx_drizzle ngx_upstream_keepalive ngx_srcache;
    dep ngx_rds_json ngx_coolkit;
}

th-ngx_memc {
    always;
    cwd ~/git/memc-nginx-module;
    env PATH '~/git/memc-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';
    env TEST_NGINX_USE_HUP 1;

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_memc;

    dep run-memcached;
    dep ndk ngx_eval ngx_echo ngx_lua ngx_upstream_keepalive;
}

th-ngx_redis2 {
    always;
    cwd ~/git/redis2-nginx-module;
    env PATH '~/git/redis2-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';
    env TEST_NGINX_USE_HUP 1;

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_redis2;

    dep run-redis;
    dep ndk ngx_eval ngx_echo ngx_set_misc ngx_lua ngx_upstream_keepalive;
}

th-ngx_xss {
    always;
    cwd ~/git/xss-nginx-module;
    env PATH '~/git/xss-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';
    env TEST_NGINX_USE_HUP 1;

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_xss;

    dep ngx_echo ndk ngx_lua;
}

th-ngx_echo {
    always;
    cwd ~/git/echo-nginx-module;
    env PATH '~/git/echo-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';
    env TEST_NGINX_USE_HUP 1;

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_echo;

    dep ndk ngx_set_misc ngx_eval ngx_xss;
    dep ngx_rds_json ngx_headers_more ngx_lua;
}

th-ngx_eval {
    always;
    cwd ~/git/eval-nginx-module;
    env PATH '~/git/eval-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';
    env TEST_NGINX_USE_HUP 1;

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_eval;

    dep run-memcached ngx_echo ngx_memc;
}

th-ngx_form_input {
    always;
    cwd ~/git/form-input-nginx-module;
    env PATH '~/git/form-input-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';
    env TEST_NGINX_USE_HUP 1;

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_form_input;

    dep ngx_echo ndk ngx_set_misc ngx_array_var;
}

th-ngx_array_var {
    always;
    cwd ~/git/array-var-nginx-module;
    env PATH '~/git/array-var-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';
    env TEST_NGINX_USE_HUP 1;

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_array_var;

    dep ngx_echo ndk ngx_set_misc;
}

th-ngx_postgres {
    always;
    cwd ~/git/postgres-nginx-module;
    env PATH '~/git/postgres-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';
    env TEST_NGINX_USE_HUP 1;

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_postgres;

    dep ngx-postgres-build-script;
    dep ngx_echo ngx_lua ngx_eval ngx_rds_json;
    dep ndk ngx_set_misc ngx_form_input ngx_coolkit;
    dep ngx_auth_request run-postgres;
}

th-ngx_encrypted_session {
    always;
    cwd ~/git/encrypted-session-nginx-module;
    env PATH '~/git/encrypted-session-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';
    env TEST_NGINX_USE_HUP 1;

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_encrypted_session;

    dep ngx_echo ndk ngx_set_misc;
}

th-ngx_iconv {
    always;
    cwd ~/git/iconv-nginx-module;
    env PATH '~/git/iconv-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';
    env TEST_NGINX_USE_HUP 1;

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_iconv;

    dep ngx_echo ndk ngx_set_misc ngx_lua ngx_rds_json;
}

th-ngx_coolkit {
    always;
    cwd ~/git/coolkit-nginx-module;
    env PATH '~/git/coolkit-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';
    env TEST_NGINX_USE_HUP 1;

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_coolkit;

    dep ngx-coolkit-build-script;
    dep ngx_echo ndk ngx_set_misc ngx_lua ngx_rds_json;
}

th-lua-resty-memcached {
    always;
    cwd ~/git/lua-resty-memcached;
    env PATH '~/git/lua-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';
    env TEST_NGINX_USE_HUP 1;

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;

    dep ngx_lua nginx-module-test lua-resty-memcached;

    dep build-ngx_lua;
}
th-lua-resty-redis {
    always;
    cwd ~/git/lua-resty-redis;
    env PATH '~/git/lua-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';
    env TEST_NGINX_USE_HUP 1;

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;

    dep ngx_lua nginx-module-test lua-resty-redis;

    dep build-ngx_lua;
}
th-lua-resty-mysql {
    always;
    cwd ~/git/lua-resty-mysql;
    env PATH '~/git/lua-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';
    env TEST_NGINX_USE_HUP 1;

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;

    dep ngx_lua nginx-module-test lua-resty-mysql;

    env TEST_NGINX_MYSQL_PATH /var/lib/mysql/mysql.sock;
    dep build-ngx_lua;
}
th-lua-resty-string {
    always;
    cwd ~/git/lua-resty-string;
    env PATH '~/git/lua-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';
    env TEST_NGINX_USE_HUP 1;

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;

    dep ngx_lua nginx-module-test lua-resty-string;

    dep build-ngx_lua;
}
th-lua-resty-upload {
    always;
    cwd ~/git/lua-resty-upload;
    env PATH '~/git/lua-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';
    env TEST_NGINX_USE_HUP 1;

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;

    dep ngx_lua nginx-module-test lua-resty-upload;

    dep build-ngx_lua;
}
th-lua-resty-dns {
    always;
    cwd ~/git/lua-resty-dns;
    env PATH '~/git/lua-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';
    env TEST_NGINX_USE_HUP 1;

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;

    dep ngx_lua nginx-module-test lua-resty-dns;

    dep build-ngx_lua;
}


thv-ngx_srcache {
    always;
    cwd ~/git/srcache-nginx-module;
    env PATH '~/git/srcache-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';
    env TEST_NGINX_USE_HUP 1;

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;


    dep nginx-module-test ngx_srcache;

    dep run-memcached run-redis run-mysql run-postgres;
}


thv-ngx_set_misc {
    always;
    cwd ~/git/set-misc-nginx-module;
    env PATH '~/git/set-misc-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';
    env TEST_NGINX_USE_HUP 1;

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;


    dep nginx-module-test ngx_set_misc;

    dep ndk ngx_echo ngx_iconv;
}

thv-ngx_headers_more {
    always;
    cwd ~/git/headers-more-nginx-module;
    env PATH '~/git/headers-more-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';
    env TEST_NGINX_USE_HUP 1;

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;


    dep nginx-module-test ngx_headers_more;

    dep ngx_eval ngx_echo ngx_lua;
}

thv-ngx_rds_json {
    always;
    cwd ~/git/rds-json-nginx-module;
    env PATH '~/git/rds-json-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';
    env TEST_NGINX_USE_HUP 1;

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;


    dep nginx-module-test ngx_rds_json;

    dep run-mysql run-postgres;
    dep ngx_drizzle ngx_eval ngx_echo ngx_xss ndk ngx_set_misc ngx_array_var ngx_form_input ngx_postgres;
}

thv-ngx_rds_csv {
    always;
    cwd ~/git/rds-csv-nginx-module;
    env PATH '~/git/rds-csv-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';
    env TEST_NGINX_USE_HUP 1;

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;


    dep nginx-module-test ngx_rds_csv;

    dep run-mysql run-postgres;
    dep ngx_eval ngx_echo ngx_xss ndk ngx_set_misc ngx_array_var;
    dep ngx_drizzle ngx_form_input ngx_postgres;
}

thv-ngx_drizzle {
    always;
    cwd ~/git/drizzle-nginx-module;
    env PATH '~/git/drizzle-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';
    env TEST_NGINX_USE_HUP 1;

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;


    dep nginx-module-test ngx_drizzle;

    dep run-mysql;
    dep ngx_lua ngx_echo ngx_rds_json;
    dep ngx_headers_more ndk ngx_set_misc;
}

thv-ngx_example_lua {
    always;
    cwd ~/git/example-lua-nginx-module;
    env PATH '~/git/example-lua-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';
    env TEST_NGINX_USE_HUP 1;

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;


    dep nginx-module-test ngx_example_lua;

    dep ngx_echo ngx_lua;
}

thv-ngx_lua {
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so $LD_PRELOAD';
    always;
    cwd ~/git/lua-nginx-module;
    env PATH '~/git/lua-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env TEST_NGINX_CHECK_LEAK '';
    env TEST_NGINX_USE_HUP 1;

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build2.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build2.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;


    dep nginx-module-test ngx_lua;

    dep run-memcached run-redis run-mysql mockeagain;
    dep pcrejit ndk ngx_set_misc ngx_auth_request;
    dep ngx_echo ngx_memc ngx_headers_more;
    dep ngx_drizzle ngx_upstream_keepalive ngx_srcache;
    dep ngx_rds_json ngx_coolkit;
}

thv-ngx_memc {
    always;
    cwd ~/git/memc-nginx-module;
    env PATH '~/git/memc-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';
    env TEST_NGINX_USE_HUP 1;

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;


    dep nginx-module-test ngx_memc;

    dep run-memcached;
    dep ndk ngx_eval ngx_echo ngx_lua ngx_upstream_keepalive;
}

thv-ngx_redis2 {
    always;
    cwd ~/git/redis2-nginx-module;
    env PATH '~/git/redis2-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';
    env TEST_NGINX_USE_HUP 1;

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;


    dep nginx-module-test ngx_redis2;

    dep run-redis;
    dep ndk ngx_eval ngx_echo ngx_set_misc ngx_lua ngx_upstream_keepalive;
}

thv-ngx_xss {
    always;
    cwd ~/git/xss-nginx-module;
    env PATH '~/git/xss-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';
    env TEST_NGINX_USE_HUP 1;

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;


    dep nginx-module-test ngx_xss;

    dep ngx_echo ndk ngx_lua;
}

thv-ngx_echo {
    always;
    cwd ~/git/echo-nginx-module;
    env PATH '~/git/echo-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';
    env TEST_NGINX_USE_HUP 1;

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;


    dep nginx-module-test ngx_echo;

    dep ndk ngx_set_misc ngx_eval ngx_xss;
    dep ngx_rds_json ngx_headers_more ngx_lua;
}

thv-ngx_eval {
    always;
    cwd ~/git/eval-nginx-module;
    env PATH '~/git/eval-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';
    env TEST_NGINX_USE_HUP 1;

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;


    dep nginx-module-test ngx_eval;

    dep run-memcached ngx_echo ngx_memc;
}

thv-ngx_form_input {
    always;
    cwd ~/git/form-input-nginx-module;
    env PATH '~/git/form-input-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';
    env TEST_NGINX_USE_HUP 1;

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;


    dep nginx-module-test ngx_form_input;

    dep ngx_echo ndk ngx_set_misc ngx_array_var;
}

thv-ngx_array_var {
    always;
    cwd ~/git/array-var-nginx-module;
    env PATH '~/git/array-var-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';
    env TEST_NGINX_USE_HUP 1;

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;


    dep nginx-module-test ngx_array_var;

    dep ngx_echo ndk ngx_set_misc;
}

thv-ngx_postgres {
    always;
    cwd ~/git/postgres-nginx-module;
    env PATH '~/git/postgres-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';
    env TEST_NGINX_USE_HUP 1;

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;


    dep nginx-module-test ngx_postgres;

    dep ngx-postgres-build-script;
    dep ngx_echo ngx_lua ngx_eval ngx_rds_json;
    dep ndk ngx_set_misc ngx_form_input ngx_coolkit;
    dep ngx_auth_request run-postgres;
}

thv-ngx_encrypted_session {
    always;
    cwd ~/git/encrypted-session-nginx-module;
    env PATH '~/git/encrypted-session-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';
    env TEST_NGINX_USE_HUP 1;

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;


    dep nginx-module-test ngx_encrypted_session;

    dep ngx_echo ndk ngx_set_misc;
}

thv-ngx_iconv {
    always;
    cwd ~/git/iconv-nginx-module;
    env PATH '~/git/iconv-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';
    env TEST_NGINX_USE_HUP 1;

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;


    dep nginx-module-test ngx_iconv;

    dep ngx_echo ndk ngx_set_misc ngx_lua ngx_rds_json;
}

thv-ngx_coolkit {
    always;
    cwd ~/git/coolkit-nginx-module;
    env PATH '~/git/coolkit-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';
    env TEST_NGINX_USE_HUP 1;

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;


    dep nginx-module-test ngx_coolkit;

    dep ngx-coolkit-build-script;
    dep ngx_echo ndk ngx_set_misc ngx_lua ngx_rds_json;
}

thv-lua-resty-memcached {
    always;
    cwd ~/git/lua-resty-memcached;
    env PATH '~/git/lua-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';
    env TEST_NGINX_USE_HUP 1;

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;

    dep ngx_lua nginx-module-test lua-resty-memcached;

    dep build-ngx_lua;
}
thv-lua-resty-redis {
    always;
    cwd ~/git/lua-resty-redis;
    env PATH '~/git/lua-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';
    env TEST_NGINX_USE_HUP 1;

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;

    dep ngx_lua nginx-module-test lua-resty-redis;

    dep build-ngx_lua;
}
thv-lua-resty-mysql {
    always;
    cwd ~/git/lua-resty-mysql;
    env PATH '~/git/lua-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';
    env TEST_NGINX_USE_HUP 1;

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;

    dep ngx_lua nginx-module-test lua-resty-mysql;

    env TEST_NGINX_MYSQL_PATH /var/lib/mysql/mysql.sock;
    dep build-ngx_lua;
}
thv-lua-resty-string {
    always;
    cwd ~/git/lua-resty-string;
    env PATH '~/git/lua-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';
    env TEST_NGINX_USE_HUP 1;

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;

    dep ngx_lua nginx-module-test lua-resty-string;

    dep build-ngx_lua;
}
thv-lua-resty-upload {
    always;
    cwd ~/git/lua-resty-upload;
    env PATH '~/git/lua-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';
    env TEST_NGINX_USE_HUP 1;

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;

    dep ngx_lua nginx-module-test lua-resty-upload;

    dep build-ngx_lua;
}
thv-lua-resty-dns {
    always;
    cwd ~/git/lua-resty-dns;
    env PATH '~/git/lua-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';
    env TEST_NGINX_USE_HUP 1;

    env TEST_NGINX_SLEEP 0.015;

    env TEST_NGINX_USE_VALGRIND 1;


    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';    dep valgrind;

    dep systemtap;

    dep ngx_lua nginx-module-test lua-resty-dns;

    dep build-ngx_lua;
}


tl-ngx_srcache {
    always;
    cwd ~/git/srcache-nginx-module;
    env PATH '~/git/srcache-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK 1;
    env LD_LIBRARY_PATH /usr/local/lib:$LD_LIBRARY_PATH;

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_srcache;

    dep run-memcached run-redis run-mysql run-postgres;
}


tl-ngx_set_misc {
    always;
    cwd ~/git/set-misc-nginx-module;
    env PATH '~/git/set-misc-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK 1;
    env LD_LIBRARY_PATH /usr/local/lib:$LD_LIBRARY_PATH;

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_set_misc;

    dep ndk ngx_echo ngx_iconv;
}

tl-ngx_headers_more {
    always;
    cwd ~/git/headers-more-nginx-module;
    env PATH '~/git/headers-more-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK 1;
    env LD_LIBRARY_PATH /usr/local/lib:$LD_LIBRARY_PATH;

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_headers_more;

    dep ngx_eval ngx_echo ngx_lua;
}

tl-ngx_rds_json {
    always;
    cwd ~/git/rds-json-nginx-module;
    env PATH '~/git/rds-json-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK 1;
    env LD_LIBRARY_PATH /usr/local/lib:$LD_LIBRARY_PATH;

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_rds_json;

    dep run-mysql run-postgres;
    dep ngx_drizzle ngx_eval ngx_echo ngx_xss ndk ngx_set_misc ngx_array_var ngx_form_input ngx_postgres;
}

tl-ngx_rds_csv {
    always;
    cwd ~/git/rds-csv-nginx-module;
    env PATH '~/git/rds-csv-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK 1;
    env LD_LIBRARY_PATH /usr/local/lib:$LD_LIBRARY_PATH;

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_rds_csv;

    dep run-mysql run-postgres;
    dep ngx_eval ngx_echo ngx_xss ndk ngx_set_misc ngx_array_var;
    dep ngx_drizzle ngx_form_input ngx_postgres;
}

tl-ngx_drizzle {
    always;
    cwd ~/git/drizzle-nginx-module;
    env PATH '~/git/drizzle-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK 1;
    env LD_LIBRARY_PATH /usr/local/lib:$LD_LIBRARY_PATH;

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_drizzle;

    dep run-mysql;
    dep ngx_lua ngx_echo ngx_rds_json;
    dep ngx_headers_more ndk ngx_set_misc;
}

tl-ngx_example_lua {
    always;
    cwd ~/git/example-lua-nginx-module;
    env PATH '~/git/example-lua-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK 1;
    env LD_LIBRARY_PATH /usr/local/lib:$LD_LIBRARY_PATH;

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_example_lua;

    dep ngx_echo ngx_lua;
}

tl-ngx_lua {
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so $LD_PRELOAD';
    always;
    cwd ~/git/lua-nginx-module;
    env PATH '~/git/lua-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env TEST_NGINX_CHECK_LEAK 1;
    env LD_LIBRARY_PATH /usr/local/lib:$LD_LIBRARY_PATH;

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build2.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build2.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_lua;

    dep run-memcached run-redis run-mysql mockeagain;
    dep pcrejit ndk ngx_set_misc ngx_auth_request;
    dep ngx_echo ngx_memc ngx_headers_more;
    dep ngx_drizzle ngx_upstream_keepalive ngx_srcache;
    dep ngx_rds_json ngx_coolkit;
}

tl-ngx_memc {
    always;
    cwd ~/git/memc-nginx-module;
    env PATH '~/git/memc-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK 1;
    env LD_LIBRARY_PATH /usr/local/lib:$LD_LIBRARY_PATH;

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_memc;

    dep run-memcached;
    dep ndk ngx_eval ngx_echo ngx_lua ngx_upstream_keepalive;
}

tl-ngx_redis2 {
    always;
    cwd ~/git/redis2-nginx-module;
    env PATH '~/git/redis2-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK 1;
    env LD_LIBRARY_PATH /usr/local/lib:$LD_LIBRARY_PATH;

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_redis2;

    dep run-redis;
    dep ndk ngx_eval ngx_echo ngx_set_misc ngx_lua ngx_upstream_keepalive;
}

tl-ngx_xss {
    always;
    cwd ~/git/xss-nginx-module;
    env PATH '~/git/xss-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK 1;
    env LD_LIBRARY_PATH /usr/local/lib:$LD_LIBRARY_PATH;

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_xss;

    dep ngx_echo ndk ngx_lua;
}

tl-ngx_echo {
    always;
    cwd ~/git/echo-nginx-module;
    env PATH '~/git/echo-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK 1;
    env LD_LIBRARY_PATH /usr/local/lib:$LD_LIBRARY_PATH;

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_echo;

    dep ndk ngx_set_misc ngx_eval ngx_xss;
    dep ngx_rds_json ngx_headers_more ngx_lua;
}

tl-ngx_eval {
    always;
    cwd ~/git/eval-nginx-module;
    env PATH '~/git/eval-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK 1;
    env LD_LIBRARY_PATH /usr/local/lib:$LD_LIBRARY_PATH;

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_eval;

    dep run-memcached ngx_echo ngx_memc;
}

tl-ngx_form_input {
    always;
    cwd ~/git/form-input-nginx-module;
    env PATH '~/git/form-input-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK 1;
    env LD_LIBRARY_PATH /usr/local/lib:$LD_LIBRARY_PATH;

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_form_input;

    dep ngx_echo ndk ngx_set_misc ngx_array_var;
}

tl-ngx_array_var {
    always;
    cwd ~/git/array-var-nginx-module;
    env PATH '~/git/array-var-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK 1;
    env LD_LIBRARY_PATH /usr/local/lib:$LD_LIBRARY_PATH;

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_array_var;

    dep ngx_echo ndk ngx_set_misc;
}

tl-ngx_postgres {
    always;
    cwd ~/git/postgres-nginx-module;
    env PATH '~/git/postgres-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK 1;
    env LD_LIBRARY_PATH /usr/local/lib:$LD_LIBRARY_PATH;

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_postgres;

    dep ngx-postgres-build-script;
    dep ngx_echo ngx_lua ngx_eval ngx_rds_json;
    dep ndk ngx_set_misc ngx_form_input ngx_coolkit;
    dep ngx_auth_request run-postgres;
}

tl-ngx_encrypted_session {
    always;
    cwd ~/git/encrypted-session-nginx-module;
    env PATH '~/git/encrypted-session-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK 1;
    env LD_LIBRARY_PATH /usr/local/lib:$LD_LIBRARY_PATH;

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_encrypted_session;

    dep ngx_echo ndk ngx_set_misc;
}

tl-ngx_iconv {
    always;
    cwd ~/git/iconv-nginx-module;
    env PATH '~/git/iconv-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK 1;
    env LD_LIBRARY_PATH /usr/local/lib:$LD_LIBRARY_PATH;

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_iconv;

    dep ngx_echo ndk ngx_set_misc ngx_lua ngx_rds_json;
}

tl-ngx_coolkit {
    always;
    cwd ~/git/coolkit-nginx-module;
    env PATH '~/git/coolkit-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK 1;
    env LD_LIBRARY_PATH /usr/local/lib:$LD_LIBRARY_PATH;

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_coolkit;

    dep ngx-coolkit-build-script;
    dep ngx_echo ndk ngx_set_misc ngx_lua ngx_rds_json;
}

tl-lua-resty-memcached {
    always;
    cwd ~/git/lua-resty-memcached;
    env PATH '~/git/lua-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK 1;
    env LD_LIBRARY_PATH /usr/local/lib:$LD_LIBRARY_PATH;

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;

    dep ngx_lua nginx-module-test lua-resty-memcached;

    dep build-ngx_lua;
}
tl-lua-resty-redis {
    always;
    cwd ~/git/lua-resty-redis;
    env PATH '~/git/lua-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK 1;
    env LD_LIBRARY_PATH /usr/local/lib:$LD_LIBRARY_PATH;

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;

    dep ngx_lua nginx-module-test lua-resty-redis;

    dep build-ngx_lua;
}
tl-lua-resty-mysql {
    always;
    cwd ~/git/lua-resty-mysql;
    env PATH '~/git/lua-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK 1;
    env LD_LIBRARY_PATH /usr/local/lib:$LD_LIBRARY_PATH;

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;

    dep ngx_lua nginx-module-test lua-resty-mysql;

    env TEST_NGINX_MYSQL_PATH /var/lib/mysql/mysql.sock;
    dep build-ngx_lua;
}
tl-lua-resty-string {
    always;
    cwd ~/git/lua-resty-string;
    env PATH '~/git/lua-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK 1;
    env LD_LIBRARY_PATH /usr/local/lib:$LD_LIBRARY_PATH;

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;

    dep ngx_lua nginx-module-test lua-resty-string;

    dep build-ngx_lua;
}
tl-lua-resty-upload {
    always;
    cwd ~/git/lua-resty-upload;
    env PATH '~/git/lua-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK 1;
    env LD_LIBRARY_PATH /usr/local/lib:$LD_LIBRARY_PATH;

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;

    dep ngx_lua nginx-module-test lua-resty-upload;

    dep build-ngx_lua;
}
tl-lua-resty-dns {
    always;
    cwd ~/git/lua-resty-dns;
    env PATH '~/git/lua-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK 1;
    env LD_LIBRARY_PATH /usr/local/lib:$LD_LIBRARY_PATH;

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;

    dep ngx_lua nginx-module-test lua-resty-dns;

    dep build-ngx_lua;
}


to-ngx_srcache {
    always;
    cwd ~/git/srcache-nginx-module;
    env PATH '~/git/srcache-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT '-O3 -funsigned-char';
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_srcache;

    dep run-memcached run-redis run-mysql run-postgres;
}


to-ngx_set_misc {
    always;
    cwd ~/git/set-misc-nginx-module;
    env PATH '~/git/set-misc-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT '-O3 -funsigned-char';
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_set_misc;

    dep ndk ngx_echo ngx_iconv;
}

to-ngx_headers_more {
    always;
    cwd ~/git/headers-more-nginx-module;
    env PATH '~/git/headers-more-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT '-O3 -funsigned-char';
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_headers_more;

    dep ngx_eval ngx_echo ngx_lua;
}

to-ngx_rds_json {
    always;
    cwd ~/git/rds-json-nginx-module;
    env PATH '~/git/rds-json-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT '-O3 -funsigned-char';
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_rds_json;

    dep run-mysql run-postgres;
    dep ngx_drizzle ngx_eval ngx_echo ngx_xss ndk ngx_set_misc ngx_array_var ngx_form_input ngx_postgres;
}

to-ngx_rds_csv {
    always;
    cwd ~/git/rds-csv-nginx-module;
    env PATH '~/git/rds-csv-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT '-O3 -funsigned-char';
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_rds_csv;

    dep run-mysql run-postgres;
    dep ngx_eval ngx_echo ngx_xss ndk ngx_set_misc ngx_array_var;
    dep ngx_drizzle ngx_form_input ngx_postgres;
}

to-ngx_drizzle {
    always;
    cwd ~/git/drizzle-nginx-module;
    env PATH '~/git/drizzle-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT '-O3 -funsigned-char';
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_drizzle;

    dep run-mysql;
    dep ngx_lua ngx_echo ngx_rds_json;
    dep ngx_headers_more ndk ngx_set_misc;
}

to-ngx_example_lua {
    always;
    cwd ~/git/example-lua-nginx-module;
    env PATH '~/git/example-lua-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT '-O3 -funsigned-char';
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_example_lua;

    dep ngx_echo ngx_lua;
}

to-ngx_lua {
    env LD_PRELOAD '~/git/mockeagain/mockeagain.so $LD_PRELOAD';
    always;
    cwd ~/git/lua-nginx-module;
    env PATH '~/git/lua-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT '-O3 -funsigned-char';
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build2.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build2.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_lua;

    dep run-memcached run-redis run-mysql mockeagain;
    dep pcrejit ndk ngx_set_misc ngx_auth_request;
    dep ngx_echo ngx_memc ngx_headers_more;
    dep ngx_drizzle ngx_upstream_keepalive ngx_srcache;
    dep ngx_rds_json ngx_coolkit;
}

to-ngx_memc {
    always;
    cwd ~/git/memc-nginx-module;
    env PATH '~/git/memc-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT '-O3 -funsigned-char';
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_memc;

    dep run-memcached;
    dep ndk ngx_eval ngx_echo ngx_lua ngx_upstream_keepalive;
}

to-ngx_redis2 {
    always;
    cwd ~/git/redis2-nginx-module;
    env PATH '~/git/redis2-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT '-O3 -funsigned-char';
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_redis2;

    dep run-redis;
    dep ndk ngx_eval ngx_echo ngx_set_misc ngx_lua ngx_upstream_keepalive;
}

to-ngx_xss {
    always;
    cwd ~/git/xss-nginx-module;
    env PATH '~/git/xss-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT '-O3 -funsigned-char';
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_xss;

    dep ngx_echo ndk ngx_lua;
}

to-ngx_echo {
    always;
    cwd ~/git/echo-nginx-module;
    env PATH '~/git/echo-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT '-O3 -funsigned-char';
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_echo;

    dep ndk ngx_set_misc ngx_eval ngx_xss;
    dep ngx_rds_json ngx_headers_more ngx_lua;
}

to-ngx_eval {
    always;
    cwd ~/git/eval-nginx-module;
    env PATH '~/git/eval-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT '-O3 -funsigned-char';
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_eval;

    dep run-memcached ngx_echo ngx_memc;
}

to-ngx_form_input {
    always;
    cwd ~/git/form-input-nginx-module;
    env PATH '~/git/form-input-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT '-O3 -funsigned-char';
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_form_input;

    dep ngx_echo ndk ngx_set_misc ngx_array_var;
}

to-ngx_array_var {
    always;
    cwd ~/git/array-var-nginx-module;
    env PATH '~/git/array-var-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT '-O3 -funsigned-char';
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_array_var;

    dep ngx_echo ndk ngx_set_misc;
}

to-ngx_postgres {
    always;
    cwd ~/git/postgres-nginx-module;
    env PATH '~/git/postgres-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT '-O3 -funsigned-char';
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_postgres;

    dep ngx-postgres-build-script;
    dep ngx_echo ngx_lua ngx_eval ngx_rds_json;
    dep ndk ngx_set_misc ngx_form_input ngx_coolkit;
    dep ngx_auth_request run-postgres;
}

to-ngx_encrypted_session {
    always;
    cwd ~/git/encrypted-session-nginx-module;
    env PATH '~/git/encrypted-session-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT '-O3 -funsigned-char';
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_encrypted_session;

    dep ngx_echo ndk ngx_set_misc;
}

to-ngx_iconv {
    always;
    cwd ~/git/iconv-nginx-module;
    env PATH '~/git/iconv-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT '-O3 -funsigned-char';
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_iconv;

    dep ngx_echo ndk ngx_set_misc ngx_lua ngx_rds_json;
}

to-ngx_coolkit {
    always;
    cwd ~/git/coolkit-nginx-module;
    env PATH '~/git/coolkit-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP '';

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT '-O3 -funsigned-char';
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env LD_PRELOAD '';
    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build.sh $nginx_version )';
    sh 'nginx -V';
    sh 'killall nginx || exit 0';
    sh 'prove -I../test-nginx/lib -r t || exit 0';

    dep systemtap;


    dep nginx-module-test ngx_coolkit;

    dep ngx-coolkit-build-script;
    dep ngx_echo ndk ngx_set_misc ngx_lua ngx_rds_json;
}


ngx-postgres-build-script {
    file ~/git/postgres-nginx-module/util/build.sh;
    test 'test -x ~/git/postgres-nginx-module/util/build.sh';
    cwd ~/git/postgres-nginx-module/util;
    fetch 'http://agentzh.org/misc/nginx/ngx-postgres-build.sh';
    sh 'mv ngx-postgres-build.sh build.sh && chmod +x build.sh';
}

ngx-coolkit-build-script {
    file ~/git/coolkit-nginx-module/util/build.sh;
    test 'test -x ~/git/coolkit-nginx-module/util/build.sh';
    cwd ~/git/coolkit-nginx-module/util;
    fetch 'http://agentzh.org/misc/nginx/ngx-coolkit-build.sh';
    sh 'mv ngx-coolkit-build.sh build.sh && chmod +x build.sh';
}

valgrind {
    env PATH /opt/valgrind/bin:$PATH;
    file /opt/valgrind/bin/valgrind;
    cwd /tmp;
    fetch http://valgrind.org/downloads/valgrind-$valgrind_version.tar.bz2;
    tarball valgrind-$valgrind_version.tar.bz2;
    sh 'cd valgrind-$valgrind_version && ./configure --prefix=/opt/valgrind && make -j$jobs && sudo make install';
    dep cc;
}

opsboy {
    git git://github.com/agentzh/opsboy.git ~/git/opsboy;
    dep cc parse-recdescent tt2;
}

tt2 {
    test 'perl -MTemplate -e1';
    yum perl-Template-Toolkit;
}

parse-recdescent {
    test 'perl -MParse::RecDescent -e1';
    yum perl-Parse-RecDescent;
}


build-ngx_lua {
    always;
    cwd ~/git/lua-nginx-module;
    env PATH '~/git/lua-nginx-module/work/nginx/sbin:$PATH';

    env TEST_NGINX_EVENT_TYPE '';
    env MOCKEAGAIN '';

    env TEST_NGINX_USE_STAP 1;

    env NGX_BUILD_CC gcc46;
    env NGX_BUILD_OPT -O1;
    env NGX_BUILD_JOBS $jobs;
    env NGX_BUILD_DTRACE 1;

    env TEST_NGINX_CHECK_LEAK '';

    env TEST_NGINX_USE_HUP '';

    env TEST_NGINX_SLEEP 0.015;
    env TEST_NGINX_USE_VALGRIND '';

    sh 'PAGER= git log HEAD^..HEAD';

    sh 'if [ -n "$force" -a "$force" != "0" ]; then rm -rf buildroot/nginx-$nginx_version*; test -f config && touch config || exit 0; fi';

    sh './util/build2.sh $nginx_version || ( [ -z "$force" -o "$force" = "0" ] && touch config && ./util/build2.sh $nginx_version )';
    sh 'nginx -V';


    dep systemtap;


    dep nginx-module-test ngx_lua;

    dep run-memcached run-redis run-mysql mockeagain;
    dep pcrejit ndk ngx_set_misc ngx_auth_request;
    dep ngx_echo ngx_memc ngx_headers_more;
    dep ngx_drizzle ngx_upstream_keepalive;
    dep ngx_rds_json ngx_coolkit;
}

systemtap {
    dep stap dtrace kernel-debuginfo staprun stapusr-grp stapdev-grp;
}

stapusr-grp {
    test 'groups `whoami`|grep stapusr > /dev/null';
    sh 'sudo usermod -a -G stapusr `whoami`';
}

stapdev-grp {
    test 'groups `whoami`|grep stapdev > /dev/null';
    sh 'sudo usermod -a -G stapdev `whoami`';
}

staprun {
    prog /usr/bin/staprun;
    yum systemtap-runtime;
    sh 'sudo chmod a+x /usr/bin/staprun';
}

kernel-debuginfo {
    test 'ls /usr/lib/debug/lib/modules/`uname -r`/kernel/* > /dev/null 2>&1';
    debuginfo 'kernel-`uname -r`';
}

stap {
    prog stap;
    yum systemtap;
}

dtrace {
    prog dtrace;
    yum systemtap-sdt-devel;
}

yum-utils {
    prog debuginfo-install;
    yum yum-utils;
}

wget {
    prog wget;
    yum wget;
}

tar {
    prog tar;
    yum install tar;
}

